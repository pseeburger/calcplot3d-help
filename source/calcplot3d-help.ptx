<?xml version="1.0" encoding="UTF-8" ?>
<pretext>

<docinfo>
	<brandlogo url="https://c3d.libretexts.org/CalcPlot3D/index.html" 
			   source="images/hyperboloid-small.png" />
	<html>
		<!-- Expects favicon/favicon-32x32.png, and favicon/favicon-16x16.png -->
		<favicon/>
	</html>
</docinfo>

<book xml:id="calcplot3d-help">
<title>CalcPlot3D Help</title>

<frontmatter xml:id="front">
<titlepage>
	<author>
	  <personname>Paul Seeburger, with support from the NSF under grant, DUE-IUSE 1524968</personname>
	  <department>Professor of Mathematics</department>
	  <institution>Monroe Community College</institution>
	  <email>pseeburger@monroecc.edu</email>
	</author>

   <date>Last updated: <today />, <timeofday /></date>
</titlepage>
</frontmatter>

<chapter xml:id="chapter-overview"><title>Overview</title>
    <introduction>
    <p>This is a help manual for using <url href="https://c3d.libretexts.org/CalcPlot3D/index.html"><alert>CalcPlot3D</alert></url>,
	 an interactive JavaScript app for visualizing multivariable calculus, differential equations, physics, and more!</p>
	 <figure xml:id="figure-calcplot3d-defaultview">
		<caption>CalcPlot3D Default View</caption>
		<image width="100%" source="images/CalcPlot3Dopen.png">
			<description>Default view of CalcPlot3D</description>
		</image>
	 </figure>
    <p>First, letâ€™s cover some of the basic functionality of the CalcPlot3D app.</p>
    </introduction>
	<section>
        <title>CalcPlot3D Introduction Video</title>
        <p>Here is a 24 minute intro video to CalcPlot3D.</p>
		<figure>
            <caption>CalcPlot3D Intro Video</caption>
            <video xml:id="video-calcplot3d-intro" href="https://c3d.libretexts.org/CalcPlot3D/videos/CalcPlot3D-IntroVideo.mp4" aspect="16:8" width="100%" play-at="select" controlslist="nodownload" disablePictureInPicture="true">
				<track kind="captions" label="US English" xml:lang="en" source="https://c3d.libretexts.org/CalcPlot3D/videos/captions.vtt"/>
			</video>
        </figure>
	</section>
    <section>
        <title>Rotating the 3D Plot &amp; Key Shortcuts</title>
        <p>Click on the 3D plot window and drag the mouse on the plot. 
        This should rotate the surface in the direction you move the mouse about the focus point (the origin, by default).
        To reset the viewpoint to the original one, press the <alert>Home</alert> key (<em>fn-left arrow</em> on Mac).</p>
        <p>Useful key shortcuts are shown below for rotating the plot and many other features (on any device with a real keyboard).</p>
		<sidebyside>
		<stack>
			<tabular top="none">
				<col width="25%"/>
				<col width="75%" />
				<row valign="bottom" bottom="major">
				    <cell colspan="2" halign="center"><p><m>\large{\textbf{CalcPlot3D}\quad\textit{Rotation}\quad\textbf{Key Shortcuts}}</m></p></cell>
				</row>
				<row valign="top" bottom="medium">
					<cell>Key combination</cell>
					<cell><p>Action</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell>left-arrow</cell>
					<cell><p>Rotate plot left about the <m>z</m>-axis.</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell>right-arrow</cell>
					<cell><p>Rotate plot right about the <m>z</m>-axis.</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell>x + left-arrow</cell>
					<cell><p>Rotate plot clockwise about the <m>x</m>-axis.</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell>x + right-arrow</cell>
					<cell><p>Rotate plot counter-clockwise about the <m>x</m>-axis.</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell>y + left-arrow</cell>
					<cell><p>Rotate plot clockwise about the <m>y</m>-axis.</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell>y + right-arrow</cell>
					<cell><p>Rotate plot counter-clockwise about the <m>y</m>-axis.</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell>up-arrow</cell>
					<cell><p>Rotate plot upward on screen.</p></cell>
				</row>
				<row valign="top" bottom="major">
					<cell>down-arrow</cell>
					<cell><p>Rotate plot downward on screen.</p></cell>
				</row>
			</tabular>
			</stack>
		</sidebyside>
		
		<sidebyside>
		<stack>			
		    
			<tabular top="none">
				<col width="25%"/>
				<col width="75%" />
				<row valign="bottom" bottom="major">
				    <cell colspan="2" halign="center"><p><m>\large{\textbf{CalcPlot3D}\quad\textit{Viewpoint}\quad\textbf{and}\quad\textit{Center}\quad\textbf{Key Shortcuts}}</m></p></cell>
				</row>
				<row valign="top" bottom="medium">
					<cell><p>Key combination</p></cell>
					<cell><p>Action</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>Home (Mac: fn-left arrow)</p></cell>
					<cell><p>Reset 3D view to default.</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>Ctrl-Home (Mac: Ctrl-fn-left arrow)</p></cell>
					<cell><p>Set viewpoint to above <m>xy</m>-plane.</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>Alt-x</p></cell>
					<cell><p>Set viewpoint to above <m>yz</m>-plane (along the positive <m>x</m>-axis).</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell><p>Alt-y</p></cell>
					<cell><p>Set viewpoint to above <m>xz</m>-plane (along the positive <m>y</m>-axis).</p></cell>
				</row>
				<row valign="top" bottom="medium">
					<cell><p>Ctrl-v</p></cell>
					<cell><p>Enter viewpoint.</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>Alt-left arrow</p></cell>
					<cell><p>Shift 3D plot center to the left.</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>Alt-right arrow</p></cell>
					<cell><p>Shift 3D plot center to the right.</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>Alt-up arrow</p></cell>
					<cell><p>Shift 3D plot center upward.</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>Alt-down arrow</p></cell>
					<cell><p>Shift 3D plot center downward.</p></cell>
				</row>
				<row valign="top" bottom="major">
					<cell><p>Alt-Home (Mac: alt-fn-left arrow)</p></cell>
					<cell><p>Reset 3D plot center to default.</p></cell>
				</row>
			</tabular>
			</stack>
		</sidebyside>
		
		<sidebyside>
		<stack>
			<tabular top="none">
				<col width="25%"/>
				<col width="75%" />
				<row valign="bottom" bottom="major">
				    <cell colspan="2" halign="center"><p><m>\large \textbf{Additional CalcPlot3D Key Shortcuts}</m></p></cell>
				</row>
				<row valign="top" bottom="medium">
					<cell><p>Key combination</p></cell>
					<cell><p>Action</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell><p>t</p></cell>
					<cell><p>Turn transparency on/off.</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell><p>a</p></cell>
					<cell><p>Show/hide axes.</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell><p>b</p></cell>
					<cell><p>Show/hide box around 3D plot.</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell><p>p</p></cell>
					<cell><p>Switch between perspective and parallel projections.</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell><p>e</p></cell>
					<cell><p>Hide/show edges on 3D surfaces.</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell><p>f</p></cell>
					<cell><p>Hide/show faces on 3D surfaces.</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell><p>n</p></cell>
					<cell><p>Show/hide surface normals on 3D surfaces.</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell><p>s</p></cell>
					<cell><p>Turn 3D Stereo View on/off.</p></cell>
				</row>
				<row valign="top" bottom="minor">
					<cell><p>3</p></cell>
					<cell><p>Turn Red/Cyan 3D Glasses mode on/off.</p></cell>
				</row>
				<row valign="top" bottom="major">
					<cell><p>Ctrl-s</p></cell>
					<cell><p>Open script menu.</p></cell>
				</row>
			</tabular>
			</stack>
		</sidebyside>
    </section>
    
    
    <section>
        <title>Using 3D Glasses</title>
        <sidebyside widths="7% 85%"><image width="7%" source="images/3DGlasses.png"><description>Image of 3D glasses</description></image>
        <p>To turn on/off the 3D Glasses Mode, click the small toolbar button with an image of 3D glasses on it.</p></sidebyside>

        <p>The plot should now appear to have overlapping red and cyan shadows, as shown in the figure below.  
        You should wear the 3D glasses so the red lens is on the left and the cyan lens is on the right.</p>
        <figure>
            <caption>3D Glasses Mode</caption>
            <interactive calcplot3d="type=z;z=7xy/e^(x^2+y^2);visible=true;umin=-2;umax=2;vmin=-2;vmax=2;grid=30;format=normal;alpha=-1;constcol=rgb(255,0,0);view=0;contourcolor=red;fixdomain=false&amp;type=window;hsrmode=3;nomidpts=true;anaglyph=0;center=-3.0033092873796114,-8.221936222744707,4.83527642161825,1;focus=0,0,0,1;up=0.07574356174225831,0.41516237846394183,0.9065887228301264,1;transparent=true;alpha=140;twoviews=false;unlinkviews=false;axisextension=0.7;xaxislabel=x;yaxislabel=y;zaxislabel=z;edgeson=true;faceson=true;showbox=true;showaxes=true;showticks=true;perspective=true;centerxpercent=0.4;centerypercent=0.5;rotationsteps=30;autospin=true;xygrid=false;yzgrid=false;xzgrid=false;gridsonbox=true;gridplanes=false;gridcolor=rgb(128,128,128);xmin=-2;xmax=2;ymin=-2;ymax=2;zmin=-2;zmax=2;xscale=1;yscale=1;zscale=1;zcmin=-4;zcmax=4;zoom=0.45;xscalefactor=1;yscalefactor=1;zscalefactor=1" variant="minimal" width="60%">
				<static>
					<image source="images/anaglyphImage.png" width="50%"/>
				</static>
			</interactive>
        </figure>
        <p>There are a variety of 3D viewing modes you can experiment with in CalcPlot3D. 
        These are found in the <alert>3D Options</alert> submenu of the Main menu in CalcPlot3D.
        For more details on the other options see the help page in <xref ref="section-3doptions" /> for this submenu.</p>
    </section>
    
    
    <section xml:id="section-other-toolbar-actions">
		<title>Other Toolbar Actions</title>
		<p>Here is a description of each of the other toolbar buttons at the top of the CalcPlot3D control panel.</p>    
		<sidebyside widths="7% 80%"><image width="7%" source="images/reset.png"><description>Reset button</description></image><p>Resets the app to the original view.</p></sidebyside>
		<sidebyside widths="7% 80%"><image width="7%" source="images/clear.png"><description>Clear Plot button</description></image><p>Clears the 3D plot of any plotted objects.</p></sidebyside>
		<sidebyside widths="7% 80%"><image width="7%" source="images/zoomIn.png"><description>Zoom In</description></image><p>Zooms the domain window in by a factor of 1/2.</p></sidebyside>
		<sidebyside widths="7% 80%"><image width="7%" source="images/zoomOut.png"><description>Zoom Out</description></image><p>Zooms the domain window out by a factor of 2.</p></sidebyside>
		<sidebyside widths="7% 80%"><image width="7%" source="images/search.png"><description>Switch Transparency</description></image><p>Turns surface transparency on/off.</p></sidebyside>
		<sidebyside widths="7% 80%"><image width="7%" source="images/edgesbutton.png"><description>Show/hide Edges</description></image><p>Show/hide the surface edges.</p></sidebyside>
		<sidebyside widths="7% 80%"><image width="7%" source="images/facesbutton.png"><description>Show/hide Faces</description></image><p>Show/hide the surface faces.</p></sidebyside>
		<sidebyside widths="10% 80%"><image width="10%" source="images/graphbutton.png"><description>Update plot</description></image><p>Force all objects to update in plot.</p></sidebyside>
		<sidebyside widths="14% 80%"><image width="14%" source="images/3Dmodebutton.png"><description>Next 3D rendering mode</description></image><stack><p>Render plot using the next 3D Hidden Surface mode. See <xref ref="section-3doptions" />.</p>
		<p>These modes are: <ul><li>Array Depthsort,</li> <li>Array Depthsort Triangularized,</li> <li>BSP Tree,</li> <li>BSP Tree Triangularized,</li> <li>Object Depth Sort</li></ul></p></stack></sidebyside>
		<sidebyside widths="7% 80%"><image width="7%" source="images/formatAxes.png"><description>Format axes</description></image><p>Show/hide the format axes options.</p></sidebyside>
		<sidebyside widths="7% 80%"><image width="7%" source="images/gridmenu.png"><description>Show Gridlines Menu</description></image><p>Show/hide the gridlines menu.</p></sidebyside>
		<sidebyside widths="7% 80%"><image width="7%" source="images/tracePlane.png"><description>Show/hide 2D Traceplane</description></image><p>Show/hide the 2D traceplane and its options. See <xref ref="chapter-traceplane" />.</p></sidebyside>
    </section>
    
    
    <section xml:id="section-formataxes">
        <title>Using the Format Axes dialog</title>
        <idx><h>format axes</h></idx>
    	<sidebyside widths="93% 7%">
		   <p>Open the Format Axes dialog by clicking on the <alert>Format Axes</alert> toolbar button</p>
		   <image width="7%" source="images/formatAxes.png"><description>Format Axes button</description></image>
	   </sidebyside>
<!--	   <sidebyside widths="60% 40%"> -->
	   <figure>
	      <caption>The format axes dialog showing all full plot options.</caption>
	      <image width="50%" source="images/formataxesdialog.png"><description>Format Axes dialog</description></image>
	   </figure>
<!--       </sidebyside>  -->
       <p>While the Zoom In and Zoom Out buttons allow you to quickly adjust the axes ranges by halving or doubling all values, 
           this dialog allows you to fine tune and adjust the axes ranges, tick mark units, scalefactors, z-clipping, and focus point.</p>
       <p>Pressing enter on any of these textbox values should update the plot accordingly.</p>
       <p><dl width="narrow"><li><title>Axis ranges</title>
           <p>Adjust these values to set the axes ranges on the 3D plot (and the associated traceplane).</p>
           </li>
           <li><title>Tick marks</title>
           <p>The <m>x</m>-, <m>y</m>-, and <m>z</m>-tick marks indicate a unit to use for spacing the tick marks and associated number labels along each axis.
           These tick marks and labels will start at the minimum value of the respective axis range.</p>
           </li>
           <li><title>Scalefactors</title>
           <p>The <m>x</m>-, <m>y</m>-, and <m>z</m>-scalefactors will scale the plot by the given scalefactor in along the given axis.
           This allows you to create plots where some dimensions are much larger or smaller than others, i.e., 
           this allows the scaling to be non-uniform in the various directions.</p>
           </li>
           <li><title><m>z</m>-clips</title>
           <p>The <m>z</m>-clipping values will hide all parts of the surface above the upper <m>z</m>-clip value or below the lower <m>z</m>-clip value.</p>
           </li>
           <li><title>Focus Point</title>
           <p>The focus point is the point about which the plot rotates.  By default, this point is the origin, 
           but this option allows you to change this pivot/focus point to something else.</p>
           </li>
           <li><title>Quick Views</title>
            <sidebyside widths="60% 40%">
               <p>The <alert>Quick Views Menu</alert> allows you to quickly adjust the plot axes ranges to one of the listed options.</p>
			   <image width="50%" source="images/quickviews.png"><description>Quickviews menu</description></image>
	       </sidebyside>
	       </li>
	    </dl></p>
    </section>
    
    
    <section xml:id="section-gridlinesmenu">
        <title>Using the Gridlines menu</title>
        <idx><h>gridlines</h></idx>
        <p><dl width="narrow"><li>
			   <title>Video:</title>
			   <p>Here is a <url href="https://www.youtube.com/embed/ZHQvTyAwP7k?rel=0"><alert>short video about the Gridlines Menu</alert></url> in CalcPlot3D created by Professor Larry Green of Lake Tahoe Community College.</p>
			</li></dl>
		</p>

	   <sidebyside widths="93% 7%">
		   <p>This menu allows you to modify the way the axes, box, and gridline planes display.
			You access this menu by clicking on the <alert>Gridlines Menu</alert> button.</p>
		   <image width="7%" source="images/gridmenu.png"><description>Grid Menu button</description></image>
	   </sidebyside>
	   <sidebyside widths="60% 30%">
		  <image width="60%" source="images/gridmenubutton-toolbar.png"><description>Grid Menu button in toolbar</description></image>
		  <image width="30%" source="images/gridmenumenu.png"><description>Grid Menu button</description></image>
	   </sidebyside>
	   <p>The menu (shown with default options selected on the right) contains the following options:
	   <ul>
	   <li><alert>Show <m>xy</m>-gridlines:</alert> Shows gridlines in the <m>xy</m>-plane or on the box (if this option is selected).</li>
	   <li><alert>Show <m>xz</m>-gridlines:</alert> Shows gridlines in the <m>xz</m>-plane or on the box (if this option is selected).</li>
	   <li><alert>Show <m>yz</m>-gridlines:</alert> Shows gridlines in the <m>yz</m>-plane or on the box (if this option is selected).</li>
	   <li><alert>Show gridlines on box:</alert> Moves the visible gridlines from the actual axes-planes to the bounding box.</li>
	   <li><alert>Show planes with grids:</alert> Displays planes with the gridlines so they are easier to see.</li>
	   <li><alert>Show box:</alert> Indicates whether to display the plot bounding box or not.  The b-key also toggles the presence of this box.</li>
	   <li><alert>Show axes:</alert> Indicates whether to display the coordinate axes or not.  The a-key also toggles the presence of the axes.</li>
	   <li><alert>Show Ticks &amp; Labels:</alert> Indicates whether to display the tick marks and numbers labeling the axes.</li>
	   </ul></p>
	   <figure xml:id="figure-gridlines-example">
		   <caption>An example plot with the gridlines shown on all three coordinate planes, shown on the box with planes to make them more visible.</caption>
		   <image width="100%" source="images/gridlinesplotexamplesmall.png"><description>Grid Menu button</description></image>
	   </figure>
    </section>
    
    
    <section xml:id="section-toptips">
        <title>Did you know?</title>
    	<p>This section includes a list of highlighted tips for using the CalcPlot3D app.  Most can be found elsewhere in this manual, 
    	but this section may help you find some useful features of CalcPlot3D that you may not have discovered yet.</p>
    	<p><ol>
    	    <li><p><alert>If you can't see all the options of a function, curve, point, etc., click on it's textbox and its options will appear.</alert></p>
    	       <p>See <xref ref="section-activeobjects" /> for more information on this important CalcPlot3D fact.</p>
    	    </li>
    	    <li><p><alert>CalcPlot3D allows you to enter most functions you might want to use.</alert></p>
    	       <p>See <xref ref="appendix-availablefunctions" /> for available functions.</p>
    	    </li>
    	    <li><p><alert>For a given surface, you can visualize partial derivatives, the directional derivative, the gradient vector, the normal vector, and more.</alert></p>
    	       <p>See <xref ref="section-traceplanemenu" /> for the 2D Trace Plane menu.</p>
    	    </li>
    	    <li><p><alert>You can save the current view to the URL.</alert></p>
    	       <p>You can create a URL that includes codes for the current view in the CalcPlot3D plot.  This allows you to save this URL to your browser Favorites, place it as a hyperlink, or send it to a student or colleague.</p>
    	       <p>For more information on how to do this, see <xref ref="subsection-savetourl" />.</p>
    	    </li>
    	    <li><p><alert>You can even save a series of views in a script file and load it into CalcPlot3D at a later time.</alert></p>
    	       <p>For a project, demonstration, or exploration, or just to show a friend something cool you are exploring in CalcPlot3D, you can create a script file
    	       with 1 or more steps/views in it and save it to your computer to be loaded into the app at a later time.</p>
    	       <p>For more information on how to do this, see <xref ref="chapter-creatingscripts" />.</p>
    	    </li>
    	    
    	    <li><p><alert>You can use parameters to animate most objects.</alert></p>
    	       <p>The letters <c>a</c>, <c>b</c>, <c>c</c>, <c>d</c>, and <c>t</c> can all be used at parameters in functions to show what happens when we vary
    	       certain aspects of a function.</p>
    	       <p>For example, we can enter the following function in the default function object:</p>
    	       <p><m>z =</m><c>a(x-c)^2 + b(y-d)^2 + t</c></p>
    	       <p>Sliders for each parameter we just used will automatically appear (if they are not already visible).
    	       We can then vary any one of these parameters and observe the effect on the shape of the surface.</p>
    	       <p>See <xref ref="section-sliders" /> for more information and examples.</p>
    	    </li>
            <li><p><alert>You can graph parametric equations in CalcPlot3D.</alert></p>
                <p>CalcPlot3D allows you to explore parametric equations in the plane or in space.</p>
    	       <p>See the Space Curve object in <xref ref="section-space-curves" /> for details.</p>
    	    </li>
    	    <li><p><alert>If you plot a parametric surface in CalcPlot3D, you can do some really interesting things with the <m>uv</m>-trace plane.</alert></p>
                <p>CalcPlot3D allows you to explore use a trace point with parametric surfaces and to vary the <m>uv</m>-domain rectangle directly by clicking-and-dragging the edges.</p>
    	        <p>See <xref ref="section-parametric-surfaces"/> for details.</p>
    	    </li>
    	</ol></p>
    </section>
    <!--    
    <section>
        <title>FAQ</title>
        <p>After graphing a surface, how come I sometimes cannot seem to find some of the options like making a contour plot?</p>
        <p>Is there a way to save the current view in CalcPlot3D so I don't have to create it all from scratch next time?</p>
        <p>If a surface is self-intersecting, it doesn't look quite right.  Is there a way to make the intersections clearner in CalcPlot3D?</p>
    </section>
    -->
</chapter>



<chapter xml:id="chapter-objects">
    <title>CalcPlot3D Objects</title>
    <introduction>
		<p>There are a number of objects that can be added to the plot window in CalcPlot3D using the <alert>Add to graph</alert> drop-down menu.
		This chapter will explain each of these objects and how to use them.</p>
		<p>Note that any object can be <alert>deleted</alert> using the small <c>X</c> in the upper-right corner.</p>
    </introduction>
	
	<section xml:id="section-functions-fxy">
	<title>Functions of Two-Variables</title>
	    <subsection>
	       <title>Functions in the form <m>z = f(x, y)</m></title>
	       <idx><h>functions</h><h><m>z = f(x, y)</m></h></idx>
	       <p>This is the type of function object that is provided by CalcPlot3D when it opens. But to add a new one,
	       just select the first option <c>Function: z = f(x,y)</c> on the <alert>Add to graph</alert> drop-down menu,
	       located just below the control panel toolbar buttons.  See an image of this object's dialog below.</p>
	       <sidebyside widths="70%">
		      <image width="50%" source="images/functionfxy.png"><description>Function z = f(x,y) object</description></image>
		   </sidebyside>
	       <p><ul>
	       <li>You can enter any function of <m>x</m> and <m>y</m> that you wish or select functions from the drop-down menu.
	       See the list of available functions in <xref ref="appendix-availablefunctions" />.</li>
	       <li>When you are ready to plot it, either select the check box on the top left of the object dialog,
	       press enter on the function you typed in the textbox, or click the <alert>Graph</alert> button.</li>
	       <li><p>The range of values for <m>x</m> and <m>y</m> that is just below the function textbox determines
	       the restricted domain (a rectangle) for this function.  Note that unless you change this, it will automatically
	       update to align with the restricted domain of the view window in the plot.</p>
	       <p>So if you were to change these values to something other than the ranges for the <m>x</m>- and <m>y</m>-axes in the <alert>Format Axes</alert> dialog (see how to use the Format Axes dialog in <xref ref="section-formataxes" />),
	       this function would keep its independent domain even when you zoom in and out using the respective toolbar buttons.</p>
	       <p>To realign this function with the axes in the plot, simply adjust the ranges for <m>x</m> and <m>y</m> for this function to match those in the plot (and Format Axes dialog).</p></li>
	       <li><p>You can vary the <em>number of gridlines</em> used to make the mesh finer or wider.  The larger the number of gridlines used,
	       the closer the surface will get to the true graph of the function, but also the more polygons it will take to create it,
	       thus slowing down the plot and rotation process.</p>
	       <p>Note that you can actually enter two numbers separated by a comma to specify the number of gridlines
	        in both the <m>x</m>- and <m>y</m>-directions.  So you could enter, for example, <c>10, 15</c>.
	        This would create this surface plot using 10 gridlines in the <m>x</m>-direction and 15 gridlines in the <m>y</m>-direction.</p>
	       <p>When only one number is used, the same number of gridlines is used in both directions.</p></li>
	       <li><sidebyside widths="7% 85%"><image width="7%" source="images/contourplotbutton.png"><description>Contour plot button</description></image>
			   <p>Use the contour plot button to create a contour plot for this surface.  For more details on Contour Plots see <xref ref="section-contourplots" />.</p>
	       </sidebyside></li>
	       <li>Use the settings button <c>âš™</c><m>\faGear</m> to adjust surface settings.  For a discussion of the options, see <xref ref="section-surfacesettings" />.</li>
	       </ul></p>
        </subsection>
        <subsection>
	       <title>Functions in the form <m>x = f(y, z)</m></title>
	       <idx><h>functions</h><h><m>x = f(y, z)</m></h></idx>
	       <p>To add a function of this type select the option <c>Function: x = f(y, z)</c> on the <alert>Add to graph</alert> drop-down menu,
	       located just below the control panel toolbar buttons.  It's near the bottom of the list.</p>
	       <sidebyside widths="70%">
		      <image width="50%" source="images/functionfyz.png"><description>Function x = f(y,z) object</description></image>
		   </sidebyside>
		   <p>I find this object especially helpful for creating vertical planes to cut a surface defined by a function of <m>x</m> and <m>y</m>.</p>
		   <p>The options are almost identical to those of the function of <m>x</m> and <m>y</m> described above, although there is no option to create a contour plot.</p>
        </subsection>
        <subsection>
	       <title>Functions in the form <m>y = f(x, z)</m></title>
	       <idx><h>functions</h><h><m>y = f(x, z)</m></h></idx>
	       <p>To add a function of this type select the option <c>Function: y = f(x, z)</c> on the <alert>Add to graph</alert> drop-down menu,
	       located just below the control panel toolbar buttons.  It's near the bottom of the list.</p>
	       <sidebyside widths="70%">
		      <image width="50%" source="images/functionfxz.png"><description>Function y = f(x,z) object</description></image>
		   </sidebyside>
		   <p>This object is also helpful for creating vertical planes to cut a surface defined by a function of <m>x</m> and <m>y</m>.</p>
		   <p>The options are again almost identical to those of the function of <m>x</m> and <m>y</m> described above, although there is no option to create a contour plot.</p>
        </subsection>
	    <subsection>
	       <title>Functions in Cylindrical Coordinates</title>
	       <p>Only one of these is implemented so far, although note that any cylindrical or spherical function can already be graphed using
	       an Implicit Surface.  See <xref ref="section-implicit-surfaces" />.</p>
	       <p><ul><li>
	             <p><alert>Functions of the form <m>r = f(\theta, z)</m></alert><idx><h>functions</h><h><m>r = f(\theta, z)</m></h></idx></p>             
	             <p>To add a function of this type select the option <c>Function: r = f(Î¸, z)</c> on the <alert>Add to graph</alert> drop-down menu,
				   located just below the control panel toolbar buttons.</p>
				 <sidebyside widths="75%">
					  <image width="70%" source="images/functionfthetaz.png"><description>Function r = f(Î¸,z) object</description></image>
				 </sidebyside>
				 <p>To enter <m>\theta</m> in your functions, you can either enter <c>theta</c> or click the <m>\theta</m> button in the middle of the range for theta.</p>
				 <p>Note that the ranges for <m>\theta</m> and <m>z</m> will not update for this type of function when you zoom in or out using the zooming buttons.</p>
				 <p>The number of steps in each domain is important in determining the resolution of the cylindrical surface.</p>
	          </li>
		   </ul></p>
        </subsection>
        <subsection>
	       <title>Functions in Spherical Coordinates</title>
	       <p>These are not yet implemented in CalcPlot3D.  But you can plot these functions already using an Implicit Surface.
	       See <xref ref="section-implicit-surfaces" />.</p>
        </subsection>
	</section>

	<section xml:id="section-space-curves">
	    <title>Space Curves</title>
	    <idx><h>curves</h><h>plane</h></idx><idx><h>curves</h><h>space</h></idx>
		<introduction>
		    <p><dl width="narrow"><li><title>Examples:</title><p>See the list of example <alert>Space Curves</alert> on the Examples submenu of the CalcPlot3D main menu.
		    See more about the Examples menu in <xref ref="section-examplesmenu"/>.</p></li></dl></p>
		    <p>To add a space curve to the plot, select the option <c>Space Curve: r(t)</c> on the <alert>Add to graph</alert> drop-down menu,
	        located just below the control panel toolbar buttons.  You'll see an object dialog appear like the following:</p>
			<sidebyside widths="50% 45%">
				  <figure>
					 <caption>Space Curve dialog</caption>
					 <image width="50%" source="images/spacecurveobject.png"><description>Space curve object</description></image>
				  </figure>
				  <figure xml:id="figure-helix">
					 <caption>Helix space curve</caption>
					 <image width="50%" source="images/helix.png"><description>Helix space curve</description></image>
				  </figure>
			</sidebyside>
			<p>Now let's plot the default space curve.</p> 
			<sidebyside widths="7% 90%">		   
			   <image width="7%" source="images/clear.png"><description>Clear Plot button</description></image>
			   <p>Clear the plot by clicking the clear plot button.</p>
		   </sidebyside>
		
			<p>Then check the checkbox in the upper-left corner of this object to plot the default curve.</p>
			<p>A multicolored helix should appear on the 3D plot as shown in <xref ref="figure-helix"/>. The color variation along the curve is meant to help viewers see the curveâ€™s 3D features, clearly 
			showing which parts of the curve are in front and which are in back.</p>
			<p>Space curves can also benefit from the other 3D modes, but when using 3D glasses modes, 
			it is helpful to choose the option <alert>Use Constant Primary Color</alert>.  The constant color is automatically selected when in 2D mode.</p>
			<p>If you wish to view the a 2D plane curve on the <m>xy</m>-plane, select the <alert>Restrict view to 2D</alert> checkbox.</p>
			<p>The range for <m>t</m> and the number of steps can each be adjusted.  More steps may be needed to make the curve smoother,
			but the number of steps will also affect the speed of the animation of motion along the curve.</p>
			<p>To animate the motion along the curve, click the <alert>Animate</alert> button.  This will cause a blue trace vector to
			move along the curve from minimum <m>t</m>-value to maximum <m>t</m>-value.  By default the velocity vector (black) and
			acceleration vector (green) are also displayed as the point moves along the space curve.</p>
			<p>The slider or textbox can also be used to adjust the value of <m>t</m> and the position of the object on the curve.</p>
		</introduction>
		<subsection>
		   <title>Space Curve Settings, âš™</title>
		   <p>Clicking on the settings button âš™ will open up the following menu.</p>
		   <sidebyside widths="40%">
		      <image width="50%" source="images/spacecurvesettings.png"><description>Space Curve settings</description></image>
		   </sidebyside>
		   <p><dl width="medium">
		      <li><title>Show Trace Point:</title>
		          <p>Indicates whether to display a point at the current position on the curve.   <em>Selected by default.</em></p>
		      </li>
		      <li><title>Show Trace Vector:</title>
		          <p>Indicates whether to display the blue trace vector at the current position on the curve. <em>Selected by default.</em></p>
		      </li>
		      <li><title>Show Velocity Vector:</title>
		          <p>Indicates whether to display black velocity vector at the current position on the curve. <em>Selected by default.</em></p>
		      </li>
		      <li><title>Show Acceleration Vector:</title>
		          <p>Indicates whether to display the green acceleration vector at the current position on the curve. <em>Selected by default.</em></p>
		      </li>
		      <li><title>Show Osculating Circle:</title>
		          <p>Indicates whether to display the osculating circle at the current position on the curve.</p>
		      </li>
		      <li><title>Show Curvature Value:</title>
		          <p>Indicates whether to display the curvature value at the current position on the curve.</p>
		      </li>
		      <li><title>Show whole TNB-Frame:</title>
		          <p>Indicates whether to display the entire TNB-Frame at the current position on the curve.  Selecting or deselecting this option
		          will automatically select or deselect all the TNB-Frame options shown below.</p>
		      </li>
		      <li><title>TNB-Frame Options:</title>
		          <p>Indicates whether to display individual parts of the TNB-Frame at the current position on the curve.
		          You can either choose to select just a few items to begin or select the whole TNB-Frame above and then deselect a few items.</p>
		      </li>
		      <li><title>Animation Settings:</title>
		         <p><ul>
		            <li><alert>Continuous Animation</alert> - If selected, the animation will continue until stopped by the user.</li>
		            <li><alert>Bounce over range</alert> - If selected along with continuous animation, the animation will go through the range
		            of <m>t</m> values in reverse after reaching the maximum <m>t</m> value, and then reverse again once it reaches the minimum <m>t</m> value.</li>
		         </ul>
				 </p>
		      </li>
		      </dl>
           </p>
		</subsection>
		
	</section>

	<section xml:id="section-vectorfields">
	    <title>Vector Fields</title>
	    <idx><h>vector fields</h></idx>
		<p><dl width="narrow"><li><title>Examples:</title><p>See the list of example <alert>Vector Fields</alert> on the Examples submenu of the CalcPlot3D main menu.
		See more about the Examples menu in <xref ref="section-examplesmenu"/>.</p></li></dl></p>
		<p>To add a vector field to the plot, select the option <c>Vector Field</c> on the <alert>Add to graph</alert> drop-down menu.
	       You'll see an object dialog appear like the following:</p>
		<sidebyside widths="50% 45%">
			  <figure>
				 <caption>Vector field dialog</caption>
				 <image width="50%" source="images/vectorfielddialog.png"><description>vector field dialog</description></image>
			  </figure>
			  <figure xml:id="figure-vectorfield2din3d">
				 <caption>2D vector field in space</caption>
				 <image width="50%" source="images/2dvectorfield-in3d.png"><description>2D Vector Field in Space</description></image>
			  </figure>
	   </sidebyside>
	   <p>Now let's plot the default vector field.</p> 
	   <sidebyside widths="7% 90%">		   
		   <image width="7%" source="images/clear.png"><description>Clear Plot button</description></image>
		   <p>Clear the plot by clicking the clear plot button.</p>
	   </sidebyside>
	   <p>Then check the checkbox in the upper-left corner of this object to plot the default vector field.</p>
	   <p>This vector field happens to be a 2D vector field, but it is plotted in a 3D plot by default.  It should look like <xref ref="figure-vectorfield2din3d" />.
	   To quickly change the view to be above the <m>xy</m>-plane, select the <alert>Restrict view to 2D</alert> option.
	   Now your view should look like <xref ref="figure-vectorfield2din2d" />.
	   Note that in 2D, the <alert>Use Constant Primary Color</alert> option is selected by default.
	   When this option is not selected, the vectors are colored based on their three components similarly to the way faces
	   of a surface are colored based on the three components of their normal vectors.</p>
	   <sidebyside widths="58% 42%">
			  <figure xml:id="figure-vectorfield2din2d">
				 <caption>2D vector field in the <m>xy</m>-plane</caption>
				 <image width="50%" source="images/2dvectorfield.png"><description>2D Vector Field in the Plane</description></image>
			  </figure>
			  <figure xml:id="figure-vectorfield2dfixed">
				 <caption>2D vector field with fixed length vectors</caption>
				 <image width="50%" source="images/fixedlengthvf.png"><description>2D Vector Field with Fixed Length Vectors</description></image>
			  </figure>
		</sidebyside>
		<p>This vector field is still fairly easy to read, but sometimes the vectors may be very difficult to read because of how they overlap.</p>
		<p>There are a couple options for dealing with this.  One option is to force all vectors in the vector field to have the same fixed length.
		Select the checkbox labeled <alert>Use fixed length for all vectors</alert> to see how this looks.  It should appear like <xref ref="figure-vectorfield2dfixed"/>.</p>
	    <p>Another way to vary the vector lengths in a vector field so that they do not overlap is to adjust the scalefactor, labeled <alert>Scale vectors by dividing by</alert>.
	    By default, vectors in a vector field are divided by 4 to scale them down.  You can adjust this value to see how it affects the plot.
	    To see all vectors in the vector field at the natural length, change this value to 1.</p>
	    <p>The <alert>Number of vectors</alert> along each axis can be adjusted to change the appearance and refinement of the vector field.
	    When in 2D mode, we just need to adjust the number of vectors along the <m>x</m>- and <m>y</m>-axes, and keep just one vector along the <m>z</m>-axis.
	    But when in 3D mode, you'll want to change the number of levels along the <m>z</m>-axis to be more than one.</p>
	    <p>Note that if you are considering a system of differential equations, you also have the option of changing the notation of the components of the vector field
	    to use differential notation.  Select the option to <alert>Show system of DEs notation</alert> and the components of the vector field should look like those here:</p>
	    <sidebyside widths="60%">
	       <image width="60%" source="images/desystemdialog.png"><description>System of differential equations notation</description></image>
	    </sidebyside>

	    <p><m>\Large\textbf{3D Vector Fields:}</m></p>
	    <p>To obtain a 3D vector field, deselect the option to <alert>Restrict view to 2D</alert> and change the number of vectors along the <m>z</m>-axis to be more than 1.
	    For example, if you change this value to 4 and also deselect the option to <alert>Use Constant Primary Color</alert>, the view will look like <xref ref="figure-vectorfield3d" />.</p>
	    <sidebyside widths="40% 60%">
			  <figure xml:id="figure-vectorfield3d">
				 <caption>3D vector field in space</caption>
				 <image width="50%" source="images/3dvectorfield.png"><description>3D Vector Field in Space</description></image>
			  </figure>
			  <figure xml:id="figure-vectorfield3d2">
				 <caption>3D vector field with a non-zero 3rd component</caption>
				 <image width="50%" source="images/3dvectorfield2b.png"><description>3D Vector Field in Space</description></image>
			  </figure>
		</sidebyside>
		<p>Changing the third component to be non-zero, say <m>P = z - x</m>, and rotating the view a little, we obtain a plot like <xref ref="figure-vectorfield3d2" />.
		The definition of the vector field is now:</p>
		<sidebyside widths="50%">
	       <image width="50%" source="images/3dexamplevf.png"><description>3D vector field with non-zero 3rd component</description></image>
	    </sidebyside>
	    <p>Note that 3D Glasses mode would be quite helpful for 3D vector fields.  Give it a try!</p>
	    <p><m>\Large\textbf{Vector Field Modes:}</m></p>
		<p>Every vector field we've looked at so far has been in <alert>Rectangular Array</alert> mode.
		Now let's consider the other mode options provided here.  Although these modes can be used in 2D mode, I think they are most useful when viewed in 3D.</p>
		<p><dl width="narrow">
		   <li><title>Spherical Array:</title>
		   <p>Instead of showing vectors at a rectangular grid of points as is done in the <alert>Rectangular Array</alert> mode,
		   <alert>Spherical Array</alert> mode places vectors at points on <alert>spheres</alert> (or circles in 2D).</p>
		   <p>Instead of specifying the number of vectors in each axis direction, <alert>Spherical Array</alert> mode uses the number of vectors on each circle (parallel to the <m>xy</m>-plane),
		   the number of concentric spheres (or concentric circles in 2D), and the number of circular steps in the vertical <m>z</m>-direction.</p>
		   <sidebyside widths="50%">
			   <image width="50%" source="images/vectorfieldsphericalranges.png"><description>Ranges for spherical mode</description></image>
		   </sidebyside>
		   <figure xml:id="figure-vectorfield3d2spherical">
				 <caption>3D vector field in Spherical Array mode</caption>
				 <image width="100%" source="images/3dvectorfield2bspherical.png"><description>3D vector field in spherical array mode</description></image>
		   </figure>
		   </li>
		   <li><title>Cylindrical Array:</title>
		   <p>In this mode places vectors at points on <alert>cylinders</alert> (or circles in 2D).</p>
		   <p><alert>Cylindrical Array</alert> mode uses the number of vectors on each circle (parallel to the <m>xy</m>-plane),
		   the number of concentric circles, and the number of levels in the vertical <m>z</m>-direction.</p>
		   <sidebyside widths="50%">
			   <image width="50%" source="images/vectorfieldcylindricalranges.png"><description>Ranges for cylindrical mode</description></image>
		   </sidebyside>
		   <figure xml:id="figure-vectorfield3d2cylindrical">
				 <caption>3D vector field in Cylindrical Array mode</caption>
				 <image width="100%" source="images/3dvectorfield2bcylindrical.png"><description>3D vector field in cylindrical array mode</description></image>
		   </figure>
		   </li>
		</dl></p>
		<p>Note that the Settings button âš™ in Vector Fields does not yet do anything.</p>
	</section>

	<section xml:id="section-points">
	<title>Points</title>
	    <idx><h>points</h></idx>
		<p>To add a point to the plot, select the option <c>Point: (x, y, z)</c> from the <alert>Add to graph</alert> menu.  The following dialog will appear:</p>
		<figure>
			 <caption>Point object dialog</caption>
			 <image width="50%" source="images/pointobject.png"><description>Point object dialog</description></image>
	    </figure>
	    <p>Enter the coordinates of the point, select a color and enter a positive size value for the point.</p>
	    <p>To plot the point, either press enter in one of the point textboxes or check the checkbox in the upper lefthand corner of the point object dialog.</p>
	    <p></p>
	    <p><em>Currently parameters are not yet allowed in points, although it is likely to be possible soon!</em></p>
	</section>
	
	<section xml:id="section-vectors">
	<title>Vectors</title>
	    <idx><h>vectors</h></idx>
		<p>To add a vector to the plot, select the option <c>Vector: &lt;a, b, c&gt;</c> from the <alert>Add to graph</alert> menu.  The following dialog will appear:</p>
		<figure>
			 <caption>Vector object dialog</caption>
			 <image width="50%" source="images/vectorobject.png"><description>Vector object dialog</description></image>
	    </figure>
	    <p>Enter the components of the vector, select a color and enter a positive width value for the vector.
	    You can then also enter the coordinates of an initial point.  By default, the initial point is assumed to be the origin.</p>
	    <p>To graph the vector, either press enter in one of the vector textboxes or check the checkbox in the upper lefthand corner of the vector object dialog.</p>
	    <p></p>
	    <p><em>Currently parameters are not yet allowed in vectors, although it is likely to be possible soon!</em></p>
	</section>
	
	<section xml:id="section-textlabels">
	    <title>Text Labels</title>
	    <idx><h>text labels</h></idx>
		<p>To add a text label to the plot, select the option <c>Text Label</c> from the <alert>Add to graph</alert> menu.  The following dialog will appear:</p>
		<figure>
			 <caption>Text label object dialog</caption>
			 <image width="50%" source="images/textobject.png"><description>Text label object dialog</description></image>
	    </figure>
	    <p>Enter the text you wish to use in the label and the coordinates of the point in the plot at which you want the text to appear.
	    Then select a font, a font size, and a color from the provided dropdowns.</p>
	    <p>The other options and their descriptions are below.</p>
	    <p><dl width="narrow">
	        <li><title>bold:</title><p>Makes the text bold</p></li>
	        <li><title><em>italic:</em></title><p>Makes the text italic</p></li>
	        <li><title>math-<em>xyz</em>:</title><p>Formats all variables as Times New Roman italics to make them stand out.</p></li>
	        <li><title>Align:</title><p>Choose where the text should be placed with respect to the associated point.  Select the alignment you wish to use.</p></li>
	        </dl>
        </p>
	    <p>To graph the text, either press enter in one of the text label textboxes or check the checkbox in the upper lefthand corner of the text label object dialog.</p>
	    <p></p>
	    <p><em>Currently parameters are not yet allowed in text labels, although it may be possible soon!</em></p>
	    <p>Note that there is also the option to add up to three top titles at the left-top, center-top, and right-top.  These can even include LaTeX code (actually MathJax).
	    See <xref ref="subsection-toptitles"/>.</p>
	</section>

	<section xml:id="section-implicit-surfaces">
	    <title>Implicit Surfaces</title>
	    <idx><h>surfaces</h><h>implicit</h></idx><idx><h>implicit equations</h></idx>
	    <p>Implicit Surfaces allow you to graph surfaces defined by any implicit equation in one of the three supported coordinate systems.</p>
		<p><dl width="narrow"><li><title>Examples:</title><p>See the list of example <alert>Implicit Surfaces</alert> on the Examples submenu of the CalcPlot3D main menu.
		See more about the Examples menu in <xref ref="section-examplesmenu"/>.</p></li></dl></p>
		<p>To add an implicit surface to the plot, select the option <c>Implicit Surface</c> on the <alert>Add to graph</alert> drop-down menu.
		You'll see an object dialog appear like the following:</p>
		<sidebyside widths="60% 40%">
		  <figure xml:id="figure-implicitsurfacedialog">
			 <caption>Implicit surface object dialog</caption>
			 <image width="50%" source="images/implicitsurfaceobject.png"><description>Implicit surface object dialog</description></image>
		  </figure>
		  <figure xml:id="figure-implicitsurface1">
			 <caption>Implicit surface from equation: <m>x^2 + y^2 - z^2 = 1</m></caption>
			 <image width="50%" source="images/implicitsurface1.png"><description>Implicit surface plot</description></image>
		  </figure>
		</sidebyside>
		<p>Now let's plot the default implicit surface.</p> 
		<sidebyside widths="7% 90%">		   
		   <image width="7%" source="images/clear.png"><description>Clear Plot button</description></image>
		   <p>Clear the plot by clicking the clear plot button.</p>
	   </sidebyside>
	
	   <p>Then check the checkbox in the upper-left corner of this object to plot the default implicit surface
	   for the implicit equation, <m>x^2 + y^2 - z^2 = 1</m>.  It should look like <xref ref="figure-implicitsurface1"/>.</p>

	   <p>Implicit surfaces can be defined by implicit equations in any of the following coordinate systems.  
	   Just use the corresponding variables.
	   <dl width="narrow">
			<li><title>Cartesian Coordinates</title>
				<p>Enter equations using the variables <m>x</m>, <m>y</m>, and <m>z</m>.</p></li>
	   <li><title>Cylindrical Coordinates</title>
				<p>Enter equations using the variables <m>r</m>, <m>\theta</m>, and <m>z</m>.
				Note that you can click on the button labeled <m>\theta</m> to enter this variable in your implicit equations.</p>
				<p>You can also enter <c>theta</c> as a word.</p></li>
	   <li><title>Spherical Coordinates</title>
				<p>Enter equations using the variables <m>\rho</m>, <m>\theta</m>, and <m>\phi</m>.
				Note that you can click on the buttons for <m>\rho</m>, <m>\theta</m>, and <m>\phi</m> to enter these variables in your implicit equations.</p>
				<p>You can also enter <c>rho</c>, <c>theta</c> or <c>phi</c> as words.</p></li>
	   </dl></p>
	   <p>Depending on which variables are in your implicit equation, ranges will be given for you to specify for each variable.</p>
	   <p>The number of cubes per axis tells CalcPlot3D how many cubes to use in the marching cubes algorithm that is used to
	   approximate the implicit surface.  As this value gets larger, the surface will look more and more smooth,
	   but it will also take longer and longer to generate and even to rotate.</p>  
	   <p>Use the settings button <c>âš™</c> to adjust surface settings.  For a discussion of the options, see <xref ref="section-surfacesettings" />.</p>
	   <p></p>
	   <p>Parameters are a great option to use with implicit surfaces.  
	   See the <alert>Solution, Method 2</alert> in the section on Level Surfaces in <xref ref="section-levelsurfaces" />.</p>
	</section>

	<section xml:id="section-parametric-surfaces">
	    <title>Parametric Surfaces</title>
	    <idx><h>surfaces</h><h>parametric</h></idx>
		<p><dl width="narrow"><li><title>Examples:</title><p>See the list of example <alert>Parametric Surfaces</alert> on the Examples submenu of the CalcPlot3D main menu.
		See more about the Examples menu in <xref ref="section-examplesmenu"/>.</p></li></dl></p>
		<p>To add a parametric surface to the plot, select the option <c>Parametric Surface</c> on the <alert>Add to graph</alert> drop-down menu.
		You'll see an object dialog appear like the following:</p>
		<sidebyside widths="54% 46%">
		  <figure xml:id="figure-parametricsurfacedialog">
			 <caption>Parametric surface object dialog</caption>
			 <image width="50%" source="images/parametricsurfaceobject.png"><description>Parametric surface object dialog</description></image>
		  </figure>
		  <figure xml:id="figure-parametricsurface1">
			 <caption>Parametric surface plot</caption>
			 <image width="50%" source="images/parametricsurface1.png"><description>Parametric surface plot</description></image>
		  </figure>
		</sidebyside>
		<p>Now let's plot the default parametric surface.</p> 
		<sidebyside widths="7% 90%">		   
		   <image width="7%" source="images/clear.png"><description>Clear Plot button</description></image>
		   <p>Clear the plot by clicking the clear plot button.</p>
	   </sidebyside>
	
	   <p>Then check the checkbox in the upper-left corner of this object to plot the default parametric surface.
	   It should look like <xref ref="figure-parametricsurface1"/>.</p>
	   <p>You can vary the ranges and the number of steps for both <m>u</m> and <m>v</m> to control the rectangular region of the <m>uv</m>-plane
	   used to generate the parametric surface.</p>
	   <p></p>
	   
	   
	   <p>Use the settings button <c>âš™</c> to adjust surface settings.  For a discussion of the options, see <xref ref="section-surfacesettings" />.</p>
	   <p></p>
	   <p><em>The last option is not yet implemented.  It is intended to allow 4th dimensional parametric surfaces to be visualized, but it has not yet been worked out.</em></p>
	   
	   <p><m>\Large\textbf{Tracing a Parametric Surface on the 2D Traceplot:}</m></p>
	   <p>When a parametric surface is the primary surface object in CalcPlot3D's 3D plot,
	   the 2D Trace Plane will use the variables <m>u</m> and <m>v</m> to allow you to see the effect
	   of varying these parameters on the location of the associated point on the parametric surface.</p>
	   
	   <sidebyside widths="93% 7%">
	       <p>To see this feature, open the 2D Trace Plane using the toolbar button.</p>
		   <image width="7%" source="images/tracePlane.png"><description>Trace Plane button</description></image>
	   </sidebyside>
	   <p>The traceplane should appear like <xref ref="figure-uvplanewithsliders"/>.</p>
	   <figure xml:id="figure-uvplanewithsliders">
	      <caption><m>uv</m>-plane with sliders</caption>
	      <image width="50%" source="images/uvplanewithsliders.png"><description>uv-plane with sliders</description></image>
	   </figure>
	   <p>Now click on the trace plane and an input point will appear on the trace plane
	   where you click and the corresponding trace point should appear on the parametric surface.
	   The corresponding values of <m>u</m> and <m>v</m> are displayed in the textbox/sliders below the <m>uv</m>-plane.</p>
	   <p>These sliders can be very helpful to show how varying each of these parameters corresponds to the points obtained on the parametric surface.</p>
	   <p>See <xref ref="figure-uvplanewithpoint"/> and <xref ref="figure-parametricsurfacewithpoint"/>.</p>
	   <sidebyside widths="44% 56%">
		  <figure xml:id="figure-uvplanewithpoint">
			 <caption><m>uv</m>-plane with an input point specified</caption>
			 <image width="50%" source="images/uvplanetracedwithsliders.png"><description>uv-plane with an input point specified</description></image>
		  </figure>
		  <figure xml:id="figure-parametricsurfacewithpoint">
			 <caption>Parametric surface plot with a trace point</caption>
			 <image width="50%" source="images/parametricsurface1traced.png"><description>Parametric surface plot with a trace point</description></image>
		  </figure>
	   </sidebyside>
	   <p>You can also see the coordinates of the corresponding trace point on the parametric surface in the green message line above the 3D plot.</p>
	   <sidebyside widths="80%">
	      <image width="50%" source="images/uvbannertraced.png"><description>Coordinates of the parametric surface trace point</description></image>
	   </sidebyside>
	   <p><m>\Large{\textbf{Adjusting the uv-domain of a Parametric Surface on the 2D Traceplot:}}</m></p>
	   <p>You can even directly adjust the rectangular region in the <m>uv</m>-plane that defines the parametric surface.  To do this, click and drag on any of the four edges of this recrtangular region.  You should be able to adjust each edge and observe how this affects the corresponding parametric surface.</p>
	   <p>Note that while adjusting these edges, they will lock onto multiples and fractions of <m>\pi</m>, as many parametric surfaces use radians.</p>
	</section>
	
    <section xml:id="section-regions">
	<title>Regions</title>
	    <idx><h>regions</h></idx>
	    <introduction>
			<p>Regions allow you to consider the 3D regions above/below the 2D region of integration of a double integral
			or the 3D region of integration of a triple integral.</p>
			<p>To add a region to the plot, select the option <c>Region</c> on the <alert>Add to graph</alert> drop-down menu.
			You'll see an object dialog appear like the following:</p>
			<sidebyside widths="60% 40%">
			  <figure xml:id="figure-regiondialogrect">
				 <caption>Region object dialog</caption>
				 <image width="50%" source="images/regionobjectrect.png"><description>Region object dialog</description></image>
			  </figure>
			  <figure xml:id="figure-region2dview">
				 <caption>2D region plot</caption>
				 <image width="50%" source="images/region2dview.png"><description>2D region plot</description></image>
			  </figure>
			</sidebyside>
			<p>The 2D region in the <m>xy</m>-plane over which the region is defined is displayed in the 2D trace plot.  See <xref ref="figure-region2dview"/>.</p>
			<p>This 2D region can be defined using two functions of <m>x</m> (top and bottom functions) and a range of <m>x</m>-values as shown above,
			or you can select <m>x = f(y)</m> and enter left and right functions of <m>y</m> and a range of <m>y</m>-values as shown below.</p>
			<sidebyside widths="60% 40%">
			  <figure xml:id="figure-regiondialogrectxfy">
				 <caption>Region object dialog with <m>x = f(y)</m></caption>
				 <image width="50%" source="images/regiondialogxfy.png"><description>Region object dialog</description></image>
			  </figure>
			  <figure xml:id="figure-region2dviewxfy">
				 <caption>2D region plot with <m>x = f(y)</m></caption>
				 <image width="50%" source="images/2dregionfy.png"><description>2D region plot</description></image>
			  </figure>
			</sidebyside>
			<p>In either mode, you can adjust the number of gridlines in each direction from the default of 25 x 25.</p>
			<p>To define the top and bottom surfaces for the region, enter the functions of <m>x</m> and <m>y</m> in the corresponding textboxes near the bottom of this dialog.</p>
			<p>Now let's plot the default region. If not already set, select the option <m>y = f(x)</m>.</p> 
			<sidebyside widths="7% 90%">		   
			   <image width="7%" source="images/clear.png"><description>Clear Plot button</description></image>
			   <p>First clear the plot by clicking the clear plot button.</p>
		   </sidebyside>
		   <p>Then check the checkbox in the upper-left corner of this object to plot the default region.
		   It should look like <xref ref="figure-regiondefault"/> shown on the left.
		   In <xref ref="figure-regiondefaultfy"/> you can see the default region for the <m>x = f(y)</m> option.
		   Compare the graphs of the base region in the <m>xy</m>-planes above with the regions shown here.</p>
		   <sidebyside widths="50% 50%">
			  <figure xml:id="figure-regiondefault">
				 <caption>Region plot for <m>y = f(x)</m></caption>
				 <image width="50%" source="images/regiondefault.png"><description>Region plot for y = f(x)</description></image>
			  </figure>
			  <figure xml:id="figure-regiondefaultfy">
				 <caption>Region plot for <m>x = f(y)</m></caption>
				 <image width="50%" source="images/regionfy.png"><description>Region plot for x = f(y)</description></image>
			  </figure>
		   </sidebyside>
		   <p><em>Currently parameters are not yet supported in regions.</em></p>
	   </introduction>
	   
	   <subsection xml:id="subsection-riemannprisms">
	      <title>Show Riemann Prisms</title>
	      <idx><h>Riemann prims</h></idx>
<!--	   <p><m>\Large\textbf{Show Riemann Prisms}</m></p>  -->
		   <p>Select the checkbox labeled, <em>Show Riemann Prisms</em>.  The region dialog should extend to show more options as shown in <xref ref="figure-regiondialogwithprisms"/> below.
		   Note that if the region is already plotted, the prisms will automatically be added to the plot. <xref ref="figure-regiondefaultwithprisms"/> shows the current region with prisms.
		   It is zoomed in once as well, using the Zoom-in button.</p>
		   <sidebyside widths="50% 50%">
			  <figure xml:id="figure-regiondialogwithprisms">
				 <caption>Region dialog with prisms</caption>
				 <image width="50%" source="images/regiondialogwithprisms.png"><description>Region dialog with prisms</description></image>
			  </figure>
			  <figure xml:id="figure-regiondefaultwithprisms">
				 <caption>Region plot with prisms</caption>
				 <image width="50%" source="images/regionwithprisms.png"><description>Region plot with prisms</description></image>
			  </figure>
		   </sidebyside>
		   <p><xref ref="figure-2dregionprisms"/> shows how the bases of the prisms are shown in the 2D plot as well.</p>
		   <sidebyside widths="50%">
			  <figure xml:id="figure-2dregionprisms">
				 <caption>2D region with prisms.</caption>
				 <image source="images/2dregionprisms.png"><description>2D region with prisms</description></image>
			  </figure>
		   </sidebyside>
		   <p>The number of prisms in each direction specify the number that would be used for an outer partition.
		   The default partition type is an inner partition that only uses the prisms whose bases are fully contained inside the 2D region.</p>
		   <p>You can vary the number of prisms to use in each direction using the textboxes or the sliders.</p>
		   <p><alert>Partition type</alert> can be either Inner Partion (the default) or Outer Partition.</p>
		   <p><alert>Height by</alert> specifies the point in the base of each prism that is to be used to determine the height of the prism on the surface.
		   Options are: Midpoint, Upper-left, Upper-right, Lower-left, Lower-right.</p>
		   <p>Select <alert>Show points used for heights</alert> to see these points shown in the <m>xy</m>-plane and the points on the surfaces above/below shown as well.</p>
		   <p>Experiment with these options and see what each produces in the plot.</p>
	   </subsection>
	   
	   <subsection xml:id="subsection-polarregions"><title>Polar Regions</title>
	       <idx><h>polar regions</h></idx>
<!--	   <p><m>\Large\textbf{Polar Regions and Polar Prisms}</m></p> -->
		   <p>In addition to regions that use rectangular coordinates, CalcPlot3D also allows you to create regions in polar coordinates
		   to help visualize double integrals in polar coordinates.</p>
		   <p>To switch to plot a polar region, click the sideways oriented button labeled, <c>rect</c>.
		   It should change to read <c>polar</c> and the dialog and traceplane should change to appear
		   as in <xref ref="figure-regiondialogpolar"/> and <xref ref="figure-2dregionpolar"/>.</p>
		   <sidebyside widths="60% 40%">
			  <figure xml:id="figure-regiondialogpolar">
				 <caption>Polar region dialog</caption>
				 <image width="50%" source="images/regionobjectpolar.png"><description>Polar region dialog</description></image>
			  </figure>
			  <figure xml:id="figure-2dregionpolar">
				 <caption>2D polar base region</caption>
				 <image width="50%" source="images/region2dviewpolar.png"><description>2D polar base region</description></image>
			  </figure>
		   </sidebyside>
		   <p>By default, the polar region is bounded by inside and outside functions of the form, <m>r = f(\theta)</m>, and a range of values for <m>\theta</m>.
		   To use <m>\theta</m> in your functions, you can either type <c>theta</c> or you can click on the <c>Î¸</c> button while you are editing the inside or outside functions.</p>
		   <p>Below you can see this region plotted in the 3D plot.</p>
		   <sidebyside widths="50%">
		      <figure xml:id="figure-regionpolar1">
		          <caption>3D polar region plot</caption>
		          <image source="images/regionpolar1.png"><description>3D polar region plot</description></image>
		      </figure>
           </sidebyside>
		   
		   <p>You can change the boundaries to be functions of the form, <m>\theta = f(r)</m> and specify a range for the values of <m>r</m>.
		   Below you can see how the region dialog changes and the corresponding 2D base region in the <m>xy</m>-plane and 3D region plot.</p>
		   <sidebyside widths="60% 40%">
			  <figure xml:id="figure-regiondialogpolar1">
				 <caption>Polar region dialog with boundaries of the form <m>\theta = f(r)</m></caption>
				 <image source="images/regionobjectpolar2.png"><description>Polar region dialog</description></image>
			  </figure>
			  <figure xml:id="figure-2dregionpolar2">
				 <caption>2D polar base region</caption>
				 <image source="images/2dregionpolar2.png"><description>2D polar base region</description></image>
			  </figure>
		   </sidebyside>
		   <sidebyside widths="50%">
		      <figure xml:id="figure-regionpolar2">
		          <caption>3D polar region plot</caption>
		          <image source="images/regionpolar2.png"><description>3D polar region plot</description></image>
		      </figure>
           </sidebyside>
		   
		   <p>Play with these options and see what you get.</p>
	  </subsection>
		   
		   
	  <subsection xml:id="subsection-polarprisms"><title>Polar Prisms</title>
	       <idx><h>polar prisms</h></idx>
	       <p>Just as we could plot the Riemann prisms above for regions in rectangular coordinates, we can plot the polar prisms
	       that are relevant here.  As above, just select the option to <em>Show Riemann Prisms</em>.  
	       The dialog will extend as before giving you the same options. See <xref ref="figure-regiondialogpolarprism"/>.
	       The only difference is that the bases of the prisms are not rectangles in the normal sense.
	       They are <q>polar rectangles</q> instead.  See the bases of the prisms in <xref ref="figure-2dregionpolarprisms"/>.</p>
		   <sidebyside widths="50% 50%">
		      <figure xml:id="figure-regiondialogpolarprism">
				 <caption>Polar region dialog with polar prism options visible</caption>
				 <image source="images/regiondialogpolarprism.png"><description>Polar region dialog</description></image>
			  </figure>
			  <figure xml:id="figure-2dregionpolarprisms">
				 <caption>2D polar region with prisms.</caption>
				 <image source="images/2dregionpolarprisms.png"><description>2D polar region with prisms</description></image>
			  </figure>
		   </sidebyside>
		   <p>The 3D polar region with polar prisms is shown below.</p>
		   <sidebyside widths="50%">
		      <figure xml:id="figure-3dpolarprisms1">
		          <caption>3D polar region plot with polar prisms</caption>
		          <image source="images/3dpolarprisms1.png"><description>3D polar region plot with polar prisms</description></image>
		      </figure>
           </sidebyside>
	   </subsection>
	</section>
	
	<section xml:id="section-sliders">
	<title>Parameter Sliders</title>
	    <idx><h>parameters</h></idx>
	    <introduction>
			<p>Parameters can be used in surfaces, curves or vector fields to show the effect of varying these parameters on the plot.</p>
			<p>They are useful for exploration, for demonstration of relationships, and for animation.</p>
			<p>Currently, possible parameters are <c>a</c>, <c>b</c>, <c>c</c>, <c>d</c>, and <c>t</c>.
			More parameters may be added in the future.  And note that <c>t</c> cannot be used as a parameter in Space Curves,
			since it is already being used in this context as the independent variable.</p>
			<p>When you use a parameter in a surface, curve or vector field, a corresponding slider object will be added automatically when you graph the object.</p>
			<p>The parameter <m>t</m> will also be automatically added to the plot when you add a vector field.
			See more about this feature in the chapter on differential equations in <xref ref="subsection-desystems"/>.</p>
		</introduction>
		<subsection xml:id="subsection-parametersliders">
		   <title>Working with Parameter Sliders</title>
		   <idx><h>parameters</h><h>working with sliders</h></idx>
		   <p>Although the corresponding parameter slider will automatically be added to the plot when you use a new parameter in another object,
		   you may wish to create and configure one first.  To do this, select the option <c>slider</c> on the <alert>Add to graph</alert> drop-down menu.
		   You'll see an object dialog appear like the following:</p>
		   <sidebyside widths="50%">
			  <figure xml:id="figure-sliderdialog">
				 <caption>Parameter slider dialog</caption>
				 <image source="images/sliderdialog.png"><description>Parameter slider dialog</description></image>
			  </figure>
		   </sidebyside>
		    <p>By default, the new slider will be assigned the next available parameter name, although you can then use the drop-down menu
		    to select which parameter you wish the slider to represent.  It is even possible for you to have more than one slider for a given parameter,
		    perhaps with different ranges or number of steps.</p>
		    <p>Each slider has a textbox that allows you to enter an initial value for the parameter.  Entering a value here will automatically
		    affect any object in the plot that uses this parameter in its definition.</p>
		    <p>The range of values for this parameter is given along the bottom of the slider dialog.  You can specify this range by adjusting these values.
		    This will affect the values obtained in the textbox when using the slider and will affect what values are used in animation of this parameter.</p>
		    <p>The number of steps can also be adjusted for each parameter.  If you wish to used just integer steps in your animation or slider,
		    you will need to consider the difference between the max and min range values and then use this natural number as your number of steps.</p>
		    <p>Clicking the <alert>Animate</alert> button on a slider will cause the value of this parameter to automatically vary,
		    starting with the minimum value and progressing through the number of steps specified to reach the maximum range value.
		    To speed up this animation, use a smaller number of steps.  To slow it down, use a larger number of steps.</p>
		    <p>When animation of a parameter starts, the label on the <alert>Animate</alert> button changes to read <alert>Pause</alert>.
		    When you click it again, it will continue with the animation.</p>	    
		</subsection>
		<subsection xml:id="subsection-parameter-settings">
		   <title>Parameter Settings,  âš™</title>
		   <idx><h>parameters</h><h>settings</h></idx>
		   <p>If you click on the settings button <c>âš™</c> on a slider object, you will see the following menu.</p>
		   <sidebyside widths="50%">
		       <image source="images/slidersettings.png"><description>slider settings menu</description></image>
		   </sidebyside>
	      <p>The options are:<dl width="medium">
	         <li>
	            <title>Continuous Animation:</title>
	            <p>(the default) Causes animation to continue once it has passed through the range of slider values.</p>
	         </li>
	         <li>
	            <title>Bounce over range:</title>
	            <p>(the default) If Continuous Animation is selected, this option causes animation to continue by going back in reverse
	            through the range of slider values.  Once it reaches the minimum value again, it will reverse again and go back through the values
	            in the forward direction, etc.</p>
	         </li>
	         <li>
	            <title>Hide Animation button:</title>
	            <p>Causes the <alert>Animate</alert> button to be hidden.  This is most useful when creating dynamic figures.
	            For more information on creating dynamic figures see <xref ref="appendix-dynamicfigures"/>.</p>
	         </li>
	         <li>
	            <title>Wait time (1-1000):</title>
	            <p>This option gives you another way to control the speed of the animation (in addition to using more steps for slower animation).</p>
	         </li>
	         <li>
	            <title>Only allow exact step values in input:</title>
	            <p>If this option is selected, only values that would come up using the slider's exact steps will be allowed in the textbox.
	            If it is unselected, other values are allowed.</p>
	         </li>
	      </dl></p>
		</subsection>
		<subsection xml:id="subsection-parameter-examples">
		   <title>Ways to Use Parameters</title>
		   <idx><h>parameters</h><h>ways to use</h></idx>
		   <p><ul>
		       <li><p><alert>To show function transformations:</alert></p>
		          <p>Example:  Enter <c>z = c(x-a)^2 + d(y-b)^2 + t</c></p>
		          <p>Varying the various parameters will then show how the paraboloid is transformed.
		          <dl width="narrow">
		              <li><title>a</title><p>shifts paraboloid <m>a</m> units in the positive <m>x</m>-direction</p></li>
		              <li><title>b</title><p>shifts paraboloid <m>b</m> units in the positive <m>y</m>-direction</p></li>
		              <li><title>t</title><p>shifts paraboloid <m>t</m> units in the positive <m>z</m>-direction</p></li>
		              <li><title>c</title><p>scales the <m>x</m>-components of the paraboloid by a factor of <m>c</m> in the vertical <m>z</m>-direction</p></li>
		              <li><title>d</title><p>scales the <m>y</m>-components of the paraboloid by a factor of <m>d</m> in the vertical <m>z</m>-direction</p></li>
		          </dl></p>		          
		       </li>
		       <li><p><alert>To show various curves in a family:</alert></p>  <!-- solution of system of DEs, hypocycloids, epicycloids, etc. -->
		       <p>Example: <alert>Hypocycloids and Epicycloids</alert></p>
		       <p><ol><li>Clear the plot.</li>
		       <li>Add a space curve to the plot by selecting <alert>Add a space curve</alert> from the <alert>Add to graph</alert> dropdown menu.</li>
		       <li>Zoom out to -8 to 8 in both <m>x</m>- and <m>y</m>-directions using the Zoom-out button.</li>
               <li>Now enter the following parametric function: <c>x = a cos(t) - cos(at)</c>, <c>y = a sin(t) - sin(at)</c>, <c>z = 0</c>.</li>
               <li>Enter a range of 0 to 2pi for <m>t</m>, and select <alert>Restrict view to 2D</alert> on the space curve dialog.</li>
               <li><p>A parameter slider object should have automatically appeared for the parameter <c>a</c>.  Vary the value of <c>a</c> using the slider or enter values of 2, 3, or -4.</p>
               <p>Notice that when the value of <c>a</c> is a positive integer, you will see an <em>epicycloid</em> with <c>a</c> cycles (petals).</p>
               <p>When the value of <c>a</c> is a negative integer, you will see a <em>hypocycloid</em> with <c>a</c> cycles (points).</p></li>
               <li>Now it would be nicest if we only showed these integer values for the parameter <c>a</c> as the slider is moved. To do this, click on the parameter dialog so it displays all its options. Set the values of <c>a</c> to range from -10 to 10 and then enter 20 steps. This will force the parameter <c>a</c> to only take on the integer values between -10 and 10, inclusive. Now try the slider again to see the series of epicycloids and hypocycloids displayed one after another.</li></ol>
               </p>
		       </li>
		       <li><alert>To show solution curves for a system of DEs:</alert> This is really a special case of the previous category,
		       but it is a distinct application.  See an example in <xref ref="subsection-desystems"/> on exploring systems of differential equations using CalcPlot3D.
		       </li>
		       <li><alert>To show level surfaces:</alert> You can add an <alert>Implicit Surface</alert> to the plot and enter the level surface equation of <m>f(x, y, z) = c</m> using parameter <m>c</m>.  Then you can vary the parameter to view the various level surfaces of this function of three variables.
		       See more about this example in the second part of <xref ref="section-levelsurfaces"/>, titled <alert>Method 2</alert>.
		       </li>
		       <li><p><alert>To create animations:</alert></p>
               <p>Click on the following link to open CalcPlot3D with an example of how parameters can be used for animation.</p>
               <p><url href="https://c3d.libretexts.org/CalcPlot3D/index.html?exploration=Cycloids">Cycloid animation exploration in CalcPlot3D app</url></p>
               <p>In the first displayed example, you will see three object dialogs on the left side of the screen. (See <xref ref="figure-cycloid1"/> below.)</p>
               <figure xml:id="figure-cycloid1">
               	   <caption>Cycloid animation objects</caption>
               	   <image width="100%" source="images/cycloidanimation.png"><description>cycloid animation objects</description></image>
               </figure>
               <p>The bottom object is the Label object stating that <q>This is a Cycloid Example.</q></p>
               <p>The middle object is the red cycloid curve in parametric form.</p>
               <p>Finally, the first object is the one we will animate using the parameter <c>a</c>.  It is a circle that is animated to show it rolling along the <m>x</m>-axis to trace out the cycloid curve.  To make it look more like it is rolling, we have left the color to vary in hue as it would for a 3D space curve.  We also forced the point to appear on the circle (that traces out the cycloid) by entering a trace value of <m>t = 0</m> and selecting the Trace checkbox on this space curve object.  Click on this dialog to see this.</p>
               <p>To animate this circle to roll along the <m>x</m>-axis and trace out the cycloid curve, click the <alert>Animate</alert> button on the <c>a</c> parameter slider.</p> 
         <!--      <sidebyside widths="50% 50%">  -->
               	  <p>Note that this example also shows an example of a script with three steps.  You can view the various steps using the exploration dialog that should have appeared in the upper right corner of the app window.  See <xref ref="figure-explorationdialog"/>.</p>
               	 <figure xml:id="figure-explorationdialog">
               	  	 <caption>Exploration dialog for Cycloid exploration</caption>
                     <image width="50%" source="images/explorationdialogcycloids.png"><description>Exploration dialog</description></image>
                 </figure>
         <!--      </sidebyside>  -->
                 <p>To view the second animation example, click the <alert>Next</alert> button on the exploration dialog.</p>
                 <figure xml:id="figure-epicycloid">
               	   <caption>Epicycloid animation</caption>
               	   <image width="100%" source="images/epicycloidanimation.png"><description>Epicycloid animation</description></image>
                 </figure>
                 <p>This example will animate tracing out an <alert>epicycloid</alert> as a circle rolls around the outside of a circle.</p>
                 <p>Try it out by clicking on the <alert>Animate</alert> button on the <c>a</c> parameter slider.</p>
                 <p>Note that the curves are color-coded with the green curve being the circle on which the epicycloid is created, the blue curve is the epicycloid itself, and the black curve is the circle being animated to roll around the green circle tracing out the epicycloid.  Again the trace point is displayed so you can see it, showing how it traces out the epicycloid curve as the small black circle rolls around the green circle.</p>
                 <p>Clicking the <alert>Next</alert> button again will display the third example, showing how a <alert>hypocycloid</alert> is traced out as a small black circle rolls around the inside of a larger green circle.</p>
                 <figure xml:id="figure-hypocycloid">
               	   <caption>Hypocycloid animation</caption>
               	   <image width="100%" source="images/hypocycloidanimation.png"><description>Hypocycloid animation</description></image>
                 </figure>
		       </li>
 		   </ul></p>
		</subsection>
	</section>
	<section xml:id="section-surfacesettings">
		<title>Surface Settings, âš™</title>
		<idx><h>surfaces</h><h>settings</h></idx>
		<introduction>
			<sidebyside widths="50% 50%">
			<p>Function settings are the same for the following objects:
			  <ul>
				<li><c>Function: z = f(x,y)</c></li>
				<li><c>Function: x = f(y,z)</c></li>
				<li><c>Function: y = f(x,z)</c></li>
				<li><c>Implicit Surface</c></li>
				<li><c>Parametric Surface</c></li>
				<li><c>Region</c></li>
				<li><c>Function: r = f(Î¸,z)</c></li>
			  </ul>
			</p>
			<image width="50%" source="images/surfacesettings.png"><description>Surface Settings Menu</description></image>
			</sidebyside>

			<p>You can find this settings menu by clicking on the settings button <c>âš™</c> for the surface object whose settings you wish to adjust.</p>
			<p>Using these settings, you can then adjust these formatting options for this surface only, leaving settings for other surfaces unaffected.</p>
		</introduction>
		<subsection>
			<title>Transparency</title>
			<sidebyside widths="92% 7%">
			    <p>You can adjust the transparency of the whole plot with the <alert>Toggle Transparency</alert> button.</p>
				<image width="7%" source="images/search.png"><description>Contour plot button</description></image>
	       </sidebyside>
			<p>But in the <em>Surface Settings</em> menu, you can adjust the transparency of a single surface so that it is not affected by the general transparency setting.</p>
			<p>The initial transparency value of <c>-1</c> forces the surface to use the default plot transparency mentioned above.</p>
			<p>Adjusting this value using the scrollbar or by entering a value from 0 (fully invisible) to 255 (fully opaque) will set the transparency value for this surface,
			and make it not follow the plot transparency setting.</p>
		</subsection>
		<subsection>
			<title>Hide my edges</title>
			<sidebyside widths="92% 7%">
			    <p>Similar to transparency, you can adjust whether the polygon edges are displayed in the whole plot with the <alert>Toggle Edges</alert> button.</p>
				<image width="7%" source="images/edgesbutton.png"><description>Toggle Edges button</description></image>
	       </sidebyside>
			<p>But in the <em>Surface Settings</em> menu, you can hide the polygon edges of a single surface so that it is not affected by the general edge display setting.</p>
			<p>This is a checkbox, that is unchecked by default.  Selecting this option will force the edges of this surface to be hidden without affecting any other surfaces in the plot.</p>
		</subsection>
		<subsection>
			<title>Coloring the surface faces</title>
			<p>These options allow you to change the coloring setting for a single surface.</p>
			<p>By default, the colors of surface faces are determined by the three components of a normal vector to the face.</p>
			<p>When two intersecting surfaces are plotted together one of them is automatically set to <alert>Reversed colors</alert> so the intersection of the surfaces is easier to see.
			Note that when two or more surfaces intersect in the plot, the Hidden Surface Mode is also automatically changed to BSP Tree Mode (not triangulated) to improve the resolution of the intersection.</p>
			<p>But in the <em>Surface Settings</em> menu, you can adjust the way the faces of a single surface are colored.</p>
			<p></p>
			<p>Now let's look at each of the options for coloring the surface faces.</p>
			<p><ul>
			    <li><alert>Normal appearance:</alert> The default coloring scheme based on the components of the normal vector to each face.</li>
			    <li><alert>Reversed colors:</alert> Each face is colored using the same coloring scheme but using the components of the negative of the normal vector.
			                                        This results in coloring the top of the surface as the bottom would have been colored in the <alert>Normal appearance</alert> mode
			                                        and coloring the bottom as if it were the top.</li>
			    <li><alert>Wireframe only:</alert> All faces for this surface are hidden and the surface is displayed as a wireframe.  
			    Note that using the <alert>Toggle Faces</alert> button will Hide/Show faces for the whole plot.  
			    But changing the coloring setting in <em>Surface Settings</em> will lock this surface to be displayed as indicated here.</li>
			    <li>
			    <sidebyside widths="70% 30%">
			    <p><alert>Constant color:</alert> Selecting this option will cause a color picker panel to appear just below these surface coloring options
			    and will color the surface red (or the last selected color).
			    You can then use the color picker to select a desired color for both sides of the entire surface.</p>
				<image width="30%" source="images/surfacecoloring.png"><description>Surface color picker</description></image>
	            </sidebyside>
			    </li>
			</ul></p>
		</subsection>
		<subsection xml:id="subsection-twoviewsdropdown">
			<title>Two views dropdown</title>
			<sidebyside widths="60% 40%">
				<p>This option will appear here only if the <alert>Show two views</alert> option is selected on the <alert>View Settings</alert> submenu of the CalcPlot3D main menu.</p>
				<image source="images/twoviewsdropdown.png"><description>two views dropdown</description></image>
			</sidebyside>
			<p>It allows you to choose in which of the side-by-side two views you wish each surface to appear.  By default, it will appear in both views.  You are given the following options.</p>
			<sidebyside widths="40%">
				<image source="images/twoviewsoptions.png"><description>two views options</description></image>
			</sidebyside>
			<p>For more information on turning this mode on and how it works, see <xref ref="subsection-twoviews"/>.</p>
		</subsection>
	</section>
	<section xml:id="section-activeobjects">
	    <title>Focused &amp; Unfocused Objects</title>
	    <p>Note that when an object dialog has the focus, all it's options will be visible, but when another object has the focus, most of these options are hidden,
		leaving only its most important properties visible.  An object will always have the focus just after being created.  To make it the active object and
		obtain the focus again, just click on the object.  All its options will appear again.</p>
		<p>For example, <xref ref="figure-activefunction"/> shows a function object dialog when it has the focus.</p>
		<sidebyside widths="50%">
		    <figure xml:id="figure-activefunction">
				 <caption>Function dialog with the focus</caption>
				 <image source="images/functionactive.png"><description>Function dialog with the focus</description></image>
			</figure>
		</sidebyside>
		<p><xref ref="figure-inactivefunction"/> shows the same function object when it no longer has the focus.</p>
		<sidebyside widths="50%">
		    <figure xml:id="figure-inactivefunction">
				 <caption>Function dialog without the focus</caption>
				 <image source="images/functioninactive.png"><description>Function dialog without the focus</description></image>
			</figure>
		</sidebyside>
		<p>As another example, <xref ref="figure-activecurve"/> shows a space curve object dialog when it has the focus.</p>
		<sidebyside widths="50%">
		    <figure xml:id="figure-activecurve">
				 <caption>Space curve dialog with the focus</caption>
				 <image source="images/curveactive.png"><description>Space curve dialog with the focus</description></image>
			</figure>
		</sidebyside>
		<p><xref ref="figure-inactivecurve"/> shows the same space curve object when it no longer has the focus.</p>
		<sidebyside widths="50%">
		    <figure xml:id="figure-inactivecurve">
				 <caption>Space curve dialog without the focus</caption>
				 <image source="images/curveinactive.png"><description>Space curve dialog without the focus</description></image>
			</figure>
		</sidebyside>
	</section>
</chapter>

<chapter xml:id="chapter-traceplane">
	<title>Using the 2D Trace Plane</title>
	<introduction>
		<p>
		The 2D Trace Plane offers options to visually explore a number of
		 multivariable calculus concepts including partial derivatives, directional derivatives,
		 gradients, normal vectors and tangent planes.
		</p>
    </introduction>
    <section>
        <title>Accessing the 2D Trace Plane</title>
    	<p>Although the 2D Trace Plane will sometimes be displayed automatically 
		(e.g., when displaying contour plots),
		it is generally not displayed when you first open CalcPlot3D.</p>
		
		<p>To access the Trace Plane, click on the trace plane button, located at the far right of the row of buttons
		above the <alert>Add to graph</alert> menu.  See the circled button below.</p>
		<sidebyside widths="70%">
		<image width="50%" source="images/traceplaneButton.png"><description>Trace plane button</description></image>
		</sidebyside>
    </section>
    <section>
        <title>Trace points on the 2D Trace Plane</title>
			<p>By default, clicking on the 2D trace plane will display the corresponding point on the first surface shown in the 3D plot.</p>
			<p>Dragging the input point around in the 2D plot will also move the corresponding function point around on the surface, 
			helping you to see how they are related.  The coordinates of the function point are shown both in the green display above the 3D plot
			and on the plot itself, in the upper left corner.</p>
    </section>
    <section xml:id="section-traceplanemenu">
        <title>Trace Plane Menu Options</title>
        <introduction>
			<p>When the 2D trace plane is displayed, a related menu appears just to the right of the trace plane button with additional options.  
			It looks like a downward pointing triangle.  See the circled button below.</p>
			<sidebyside widths="70%">
			<image width="50%" source="images/traceplanemenubuttoncircled.png"><description>Trace plane menu button</description></image>
			</sidebyside>
			<p>Click on it to view the available options.</p>
			<p>Each of these options is described below.</p>
        </introduction>
        <subsection>
            <title>Enter trace point</title>
            <p>This option allows you to enter a trace point as an ordered pair.  Once entered,
            the point will be plotted on the 2D trace plane and the corresponding point will be shown
            on the surface in the 3D plot.</p>
        </subsection>
        <subsection>
            <title>Show trace point only</title>
            <p>This option is to return to the default of only showing a trace point after viewing one of the other objects on this list.</p>
        </subsection>
        <subsection>
            <title>Show tangent plane at point</title>
            <p>Choosing this option will allow you to see the tangent plane to the first plotted surface
             at any given point you click on in the 2D trace plane.</p>
             <p>You can click and drag the input point around in the trace plane to see the corresponding tangent plane
             move about on the surface.</p>
        </subsection>
        <subsection>
            <title>Show gradient at point on surface</title>
            <p>There are two options to display the gradient vector to the surface.</p>
            <p>This one displays the gradient vector at the corresponding point on the surface
            as well as in the 2D trace plane at the input point.</p>
        </subsection>
        <subsection>
            <title>Show gradient at input point</title>
            <p>This one displays the gradient vector at the input point in the <m>xy</m>-plane in the 3D plot
            as well as at the input point in the 2D trace plane.</p>
        </subsection>
        <subsection>
            <title>Show normal vector at point</title>
            <p>Use this option to display a normal vector on the surface at the selected input point in the 2D trace plane.</p>
            <p>Again, you can click-and-drag the input point around in the 2D trace plane to see how the
            normal vector moves around on the surface in the 3D plot.</p>
        </subsection>
        <subsection>
            <title>Show fx trace/tangent line</title>
            <p>Choose this option to display a trace curve of the surface at the selected input point that keeps the <m>y</m>-coordinate fixed
            and varies the <m>x</m>-coordinates.</p>
            <p>A tangent line to this trace curve will also be displayed at the input point, and the partial derivative of the function with respect to <m>x</m>
            will be displayed in the green display above the 3D plot.
            This value corresponds to the slope of the trace curve (and the surface) at the trace point in the <em>positive</em> <m>x</m>-direction.</p>
            <p>Note that the corresponding point on the surface is also displayed in the upper-left corner of the 3D plot.</p>
            <p>Also notice that you can use the sliders or textboxes below the 2D trace plane to vary the input point and see how the slopes change
            as you move along a single trace curve, as you vary <m>x</m>, or how the trace curve and slope change as you vary <m>y</m>.</p>
        </subsection>
        <subsection>
            <title>Show fy trace/tangent line</title>
            <p>Select this option to display a trace curve of the surface at the selected input point that keeps the <m>x</m>-coordinate fixed
            and varies the <m>y</m>-coordinates.</p>
            <p>A tangent line to this trace curve will also be displayed at the input point, and the partial derivative of the function with respect to <m>y</m>
            will be displayed in the green display above the 3D plot.
            This value corresponds to the slope of the trace curve (and the surface) at the trace point in the <em>positive</em> <m>y</m>-direction.</p>
            <p>Note that the corresponding point on the surface is also displayed in the upper-left corner of the 3D plot.</p>
            <p>Also notice that you can use the sliders or textboxes below the 2D trace plane to vary the input point and see how the slopes change
            as you move along a single trace curve, as you vary <m>y</m>, or how the trace curve and slope change as you vary <m>x</m>.</p>
        </subsection>
        <subsection>
            <title>Show dir derivative trace</title>
            <p>This option will display a trace curve of the surface at the selected input point that is aligned with the displayed direction vector.</p>
            <p>A tangent line to this trace curve is displayed at the input point, and the value of the directional derivative
            of the function in the direction of the direction vector will be displayed in the green display above the 3D plot.
            This value corresponds to the slope of the trace curve (and the surface) at the trace point in the direction of the direction vector.</p>
            <p>The corresponding point on the surface is also displayed in the upper-left corner of the 3D plot.</p>
            <p>In the 2D trace plane, you will see two vectors in addition to the input point.</p>
            <p>The red vector is the gradient vector to the surface at the selected input point.</p>
            <p>The green vector is the normalized (unit length) current direction vector to the surface at the selected input point.</p>
            <p>To change the direction of the direction vector, either right-click and drag it around in the 2D trace plane,
            vary the slider for the angle theta shown below the 2D trace plane, or select the option to enter a direction vector using it's components.</p>
            <p>Again, note that there is a slider that allows you to vary only the position of the tangent line along the current trace curve.</p>
        </subsection>
        <subsection>
            <title>Enter a direction vector</title>
            <p>This option allows you to enter a 2D direction vector (from the <m>xy</m>-plane)
            for use with the <alert>Show dir derivative trace</alert> option above.</p>
        </subsection>
        <subsection>
            <title>Hide all objects</title>
            <p>Select this option to hide all trace objects in both the 2D trace plane and in the 3D plot.</p>
        </subsection>
    </section>
</chapter>


<chapter>
<title>CalcPlot3D Menus &amp; Options</title>
<introduction>
   <sidebyside widths="90% 7%">
   	<stack>
	   <p>This chapter explains how to use each of the options on CalcPlot3D's main menu.  
	   To access this main menu, click or tap on the menu icon located at the upper left corner of the app, on the green bar.
	   It looks like the image to the right.</p>
	   <p>To hide the main menu, either click on the <alert>X</alert> in the upper-righthand corner of the menu or click somewhere in the app outside of the menu system.</p>
	   <p>To hide a main submenu, you'll need to click the submenu name again or click on another submenu.</p>
   </stack>
   <image width="50%" source="images/mainmenu.png"><description>App Main Menu icon</description></image>
   </sidebyside>
</introduction>
<section xml:id="section-filemenu">
	<title>File menu</title>
	<introduction><sidebyside widths="40%">
		<image source="images/filemenu.png"><description>File menu</description></image>
	</sidebyside></introduction>
	<subsection xml:id="subsection-viewvectorexplorations">
	<title>View Vector Explorations</title>
	   <p>Opens up the Vector Explorations dialog.  See <xref ref="section-vectorexplorations"/>.</p>
	</subsection>
	<subsection xml:id="subsection-create-stlfile">
	<title>Create an STL file from the plot</title>
	   <p>Opens the STL Creation dialog.  See <xref ref="section-stlfile"/>.</p>
	</subsection>
	<subsection xml:id="subsection-savetopng">
	<title>Save the plot as a PNG</title>
	   <p>Allows you to save the current plot image as a PNG file.</p>
	</subsection>
	<subsection xml:id="subsection-copyonoff-chrome">
	<title>Copy option on/off (in Chrome)</title>
	   <p>In the Chrome browser, the default behavior on an image is to be able to right click on it and copy it to the clipboard.  But in CalcPlot3D, the default behavior is to do something else when you right-click on the 3D plot.  This option allows you to use the standard Chrome contextual menu to copy the 3D plot image to the clipboard.  Clicking this option again will restore the default CalcPlot3D right-click behavior.</p>
	</subsection>
	<subsection xml:id="subsection-savetourl">
	<title>Encode View in URL</title>
	   <p>This can be a very useful feature.  When you have created a 3D plot view that contains the objects you want to share with someone else or wish to use later in a class demonstration, you can use this option to encode the objects, settings, and perspective in the current view into a query string that is added to the standard app URL.  It is immediately reloaded with the encoded view to check that it encoded all that you wanted.</p>
	   <p>If you find something that is not yet encoded using this option, let me know by emailing me at <email>pseeburger@monroecc.edu</email>.</p>
	   <p>Note that you can add the encoded URL to your browser favorites, email it to a friend, student or professor, or you can include it on a webpage to automatically load the view when your visitors click on your link.</p>
	</subsection>
</section>
<section xml:id="section-scriptsmenu">
	<title>Scripts menu</title>
	<introduction>
        <p>When a script is not yet loaded or created in CalcPlot3D, most of the script menu options are greyed out.</p>
		<sidebyside widths="40%">
		   <image source="images/scriptsmenu.png"><description>Scripts menu</description></image>
	    </sidebyside>
        <p>But once a script has been loaded or created, all script options are available.</p>
        <sidebyside widths="40%">
		   <image source="images/scriptsmenuactive.png"><description>active scripts menu</description></image>
	    </sidebyside>
    </introduction>
	<subsection>
		<title>Load a script</title>
		<p>This menu option allows you to load any script created using CalcPlot3D from your local filesystem.</p>
	</subsection>
	<subsection>
		<title>Create new script with current plot as 1st step</title>
		<p>This option allows you to create a new script with the current view in the 3D plot of CalcPlot3D as the first step.</p>
		<p>You will be asked for the script name.  This script name will be used as the filename when you save this script using the <alert>Save script</alert> option described below.</p>
	</subsection>
	<subsection>
		<title>Add current view to active script</title>
		<p>This option just adds the current view in CalcPlot3D to the active script in CalcPlot3D.  If there is no active script in CalcPlot3D, then this option should be greyed out as unavailable.</p>
	</subsection>
	<subsection>
		<title>Delete a step in the active script</title>
		<p>This option allows you to delete any step in the active script in CalcPlot3D.  If there is no active script in CalcPlot3D, then this option should be greyed out as unavailable.</p>
	</subsection>
	<subsection>
		<title>Save script</title>
		<p>Once you have created a script or loaded one into the app, you can save it to your computer using this option.  In fact, if you don't save it using this option, you will lose any steps you have added to the script when you close the exploration, reset the app, close the app, or close the browser.</p>
		<p>You will be asked for a filename and then the script should be downloaded to your computer using the default download behavior of your browser.</p>
		<p>Any scripts that you save in this way can then be loaded back into CalcPlot3D using the <alert>Load a script</alert> menu option described above.</p>
	</subsection>
</section>
<section xml:id="section-printplot">
	<title>Print Plot option</title>
	<sidebyside widths="50% 50%">
		<p>When you select this option, you will be asked for a title for the printed plot.  This could be your name, a title for what is contained in the plot, or perhaps a level surface constant value.</p>
		<image source="images/printtitledialog.png"><description>Print title dialog</description></image>
	</sidebyside>
    <p>Once you enter a title, the system print dialog should open.  On a Mac, it will look like the dialog below.</p>
    <sidebyside widths="90%">
		<image source="images/macprintdialog.png"><description>Print dialog on a Mac</description></image>
	</sidebyside>
	<p>Note that you can cancel the print from either dialog.</p>
</section>
<section xml:id="section-3doptions">
	<title>3D Options menu</title>
	<sidebyside widths="40%">
		<image source="images/3doptionsmenu.png"><description>3D Options menu</description></image>
	</sidebyside>
	<p><dl width="narrow">
	<li>
		<title>Standard Projection:</title>
		<p>This is the default view.  No 3D glasses special viewing techniques are required.</p>
	</li>
	<li>
		<title>Colored Red-Cyan:</title>
		<p>This mode is meant to be used with red-cyan 3D glasses.  It makes the 3D plot appear to be half behind the screen and half in front of the screen.  It is the standard 3D mode used when you click on the 3D glasses toolbar button.</p>
	</li>
	<li>
		<title>Stereo Pair:</title>
		<p>This mode provides you with two side-by-side versions of the 3D plot.  You need to stare at these images so that your left eye is looking at the left image and your right eye is looking at the right image.  Then a third image should appear in the center that looks 3D and is colored exactly as the standard view is.  To achieve this, I find it helpful to cover my right eye while focusing my left eye on the left image.  Then cover my left eye while focusing my right eye on the right image then opening both eyes again.</p>
	</li>
	<li>
		<title>VR Stereo Pair:</title>
		<p>This mode is still experimental, but is intended to allow the 3D plot in CalcPlot3D to be viewed using a Virtual Reality (VR) viewer on a phone.  It's been tested on an iPhone so far, but seems to work differently on Android phones.</p>
		<p>If it is working as intended, the 3D view should rotate when you turn your head from side to side or look up or down.</p>
	</li>
    </dl></p>
</section>
<section xml:id="section-viewsettingsmenu">
	<title>View Settings menu</title>
	<introduction>
	   <sidebyside widths="40%">
		  <image source="images/settingsmenu.png"><description>View settings menu</description></image>
	   </sidebyside>
	   <p></p>
	</introduction>
<!--	<p><dl width="narrow">  -->
	   <subsection xml:id="subsection-toptitles">
	      <title>Adding Top Titles</title>
	      
          <sidebyside widths="60% 40%">
          	 <stack>
	            <p>This submenu allows you to add up to three distinct titles at the top of the 3D plot on the top-left, top-center, and top-right.</p>
	            <p>Each title can use LaTeX, as each is processed through MathJax.</p>
	         </stack>
	         <image source="images/toptitlesmenu.png"><description>Top titles submenu</description></image>
	      </sidebyside>
	   </subsection>

	   <subsection xml:id="subsection-hiddensurfacemode">
	   	  <title>Hidden Surface Mode</title>
	   	  <sidebyside widths="60% 40%">
	   	  	 <stack>
	            <p>This submenu allows you to select which hidden surface mode to use for 3D rendering.
	            	There are pros and cons for each of them.  There is a trade-off between speed and accuracy.</p>
	            <p>See the options and their descriptions below.</p>
	         </stack>
	         <image source="images/hiddensurfacemodemenu.png"><description>Hidden Surface Mode submenu</description></image>
	      </sidebyside>
	      <p><dl width="narrow">
             <li><title>Array Depthsort:</title>
                 <p>This is the default hidden surface mode as it is the least time and memory intensive mode.  It uses a depth sort on arrays of polygons and other objects, minimizing the memory used and the time taken to process the view.</p>
                 <p>It is great for morphing surfaces that use parameters, e.g., level surfaces, but it does not handle intersections of surfaces well.</p>
             </li>
             <li><title>Array Depthsort Tri.:</title>
                 <p>This mode is the same as the previous mode, except that it triangularizes each polygon.  That is, if it was not a triangle already, it is broken into four triangles using its midpoint.  This will produce an improved surface rendering, but will be slower than the non-triangularized mode, as it uses a lot more polygon arrays.</p>
                 <p>This mode also morphs well, but does not handle surface intersections well.</p>
             </li>
             <li><title>BSP Tree:</title>
                 <p>This mode will automatically be selected if two intersecting surfaces are plotted together, as it handles surface intersections fairly well, and is still not overly slow.</p>
                 <p>It is generated using objects rather than arrays and uses a Binary Space Partitioning Tree to order the collection of polygon faces in the view.  A first face is selected using some criteria and then the rest of the faces are divided into a collection of faces that are in front of the chosen face and those that are behind it.  Any faces that are partly in front and partly behind this dividing face are split into two polygons (one of which is in front of the chosen face and one that is behind it).  This process is then repeated on the front collection of faces and the back collection of faces.  Once all faces (and other objects) are organized in this way, we draw the back collection first, then the splitting face and then the front collection, using what is often called the <q>Painter's Algorithm</q>.</p>
             </li>
             <li><title>BSP Tree Triangulated:</title>
                 <p>This mode uses a BSP Tree after first triangularizing each polygonal face.  That is, if any polygon is not already a triangle, it will be split into 4 triangles using its midpoint (and calculating the correct <m>z</m>-coordinate for the midpoint).</p>
                 <p>This is the most accurate 3D rendering mode, but it also will take the most time to process initially and will generate the most extra polygons, so it will rotate more slowly.</p>
                 <p>It provides the nicest rendering of self-intersecting surfaces or of plots containing two or more intersecting surfaces.</p>
             </li>
             <li><title>Object Depth Sort:</title>
                 <p>This mode uses a depth sort using an object model.  It is therefore very similar to the Array Depthsort, but may use a little more memory and be somewhat slower than the Array Depthsort mode.</p>
             </li>
             <li><title>Object Depth Sort Tri.:</title>
                 <p>This uses the same depthsort and object model as the previous mode, but it first triangularizes any non-triangular faces.</p>
             </li>
	      </dl></p>
	   </subsection>
	   <subsection xml:id="subsection-twoviews">
	   	  <title>Show two views</title>
	   	  <p>Select this option if you want to have two linked or unlinked 3D views containing related plots.</p>
	   	  <sidebyside widths="60% 40%">
	   	     <p>When this option is selected, a new option will appear on the Surface Settings for each surface (and eventually also on the settings for other objects too), allowing you to specify in which view(s) you want it to appear.  For more information on this see <xref ref="subsection-twoviewsdropdown"/> on the Surface Settings help page.</p>
	   	     <image source="images/twoviewsdropdown.png"><description>two views dropdown</description></image>
	   	  </sidebyside>
	   	  <p>Although this mode looks a lot like the Stereo View 3D mode, it is not rendering the two views from a different perspective this time, but exactly the same.  It allows related plots to be displayed next to each other with the same viewpoint.</p>
	   </subsection>
	   <subsection xml:id="subsection-unlinktwoviews">
	   	  <title>Unlink two views</title>
	   	  <p>This option is not yet implemented, but it is intended to allow the two parallel views without requiring them to rotate with the same viewpoint.</p>
	   </subsection>
	   <subsection xml:id="subsection-setviewpoint">
	   	  <title>Set Viewpoint</title>
	   	  <p>This option allows you to enter a specified viewpoint for the 3D plot using either Cartesian or Spherical coordinates.</p>
	   	  <sidebyside widths="60% 40%">
	   	     <p>When this option is selected, a dialog will appear asking you which coordinate system you wish to use to specify the viewpoint.</p>
	   	     <image source="images/viewpointcartspher.png"><description>viewpoint coordinate system dialog</description></image>
	   	  </sidebyside>
	   	  <p>Depending on which selection you make you will see a different series of dialogs asking you to specify the viewpoint.</p>
	   	  <p><m>\Large\textbf{Cartesian Coordinates:}</m> If you select <alert>Cartesian</alert>, you will be asked for viewpoint coordinates (the coordinates of the point where you wish the user's eye to be, viewing the focus point of the plot) and the components of the up direction (as a vector).</p>
	   	  <p>These dialogs are shown in the figure below.</p>
	   	  <figure xml:id="figure-viewpointdialogs-cartesian">
	   	  	 <caption>Dialogs shown for entering a viewpoint in Cartesian coordinates.</caption>
	   	     <sidebyside widths="50% 50%">
	   	     	<image source="images/viewpointcartcoords.png"><description>viewpoint point dialog</description></image>
	   	     	<image source="images/upcoords.png"><description>viewpoint up vector dialog</description></image>
	   	     </sidebyside>
	   	  </figure>
	   	  <p>If you wish to change the focus point, see the <alert>Format Axes</alert> help page in <xref ref="section-formataxes"/>.</p>
	   	  <p><m>\Large\textbf{Spherical Coordinates:}</m> If you select <alert>Spherical</alert>, you will be asked for the eye distance from the focus point, the angle theta, and the angle phi, as well as the components of the up direction (as a vector).</p>
	   	  <p>These dialogs are shown in the figure below.</p>
	   	  <figure xml:id="figure-viewpointdialogs-spherical">
	   	  	 <caption>Dialogs shown for entering a viewpoint in Spherical coordinates.</caption>
	   	  	 <sbsgroup>
		   	     <sidebyside widths="50% 50%">
		   	     	<image source="images/viewpointeyedistance.png"><description>spherical viewpoint eye distance dialog</description></image>
		   	     	<image source="images/viewpointtheta.png"><description>spherical viewpoint theta dialog</description></image>
		   	     </sidebyside>
		   	     <sidebyside widths="50% 50%">
		   	     	<image source="images/viewpointphi.png"><description>spherical viewpoint phi dialog</description></image>
		   	     	<image source="images/upcoords.png"><description>viewpoint up vector dialog</description></image>
		   	     </sidebyside>
	   	     </sbsgroup>
	   	  </figure>
	   </subsection>
	   <subsection>
	   	  <title>Reset 3D View</title>
	   	  <p>Resets the 3D plot's viewpoint to the default 3D view from the 1st octant.</p>
	   </subsection>
	   <subsection>
	   	  <title>View above <m>xy</m>-plane</title>
	   	  <p>Sets the 3D plot's viewpoint to be from a point on the <m>z</m>-axis above the <m>xy</m>-plane with the <m>y</m>-axis being in the up-direction.  This option does not alter whether the view is projected in parallel or perspective mode.</p>
	   </subsection>
	   <subsection>
	   	  <title>View above <m>xz</m>-plane</title>
	   	  <p>Sets the 3D plot's viewpoint to be from a point on the <m>y</m>-axis above the <m>xz</m>-plane with the <m>z</m>-axis being in the up-direction.  This option does not alter whether the view is projected in parallel or perspective mode.</p>
	   </subsection>
	   <subsection>
	   	  <title>View above <m>yz</m>-plane</title>
	   	  <p>Sets the 3D plot's viewpoint to be from a point on the <m>x</m>-axis above the <m>yz</m>-plane with the <m>z</m>-axis being in the up-direction.  This option does not alter whether the view is projected in parallel or perspective mode.</p>
	   </subsection>
 <!--   </dl></p>  -->
</section>
<section xml:id="section-examplesmenu">
	<title>Examples menu</title>
	<sidebyside widths="40%">
		<image source="images/examplesmenu.png"><description>Examples menu</description></image>
	</sidebyside>
	<p>You can select any of the categories shown on this submenu.  Selecting one should open another submenu that lists a series of examples for that type of surface object.</p>
	<sidebyside widths="95% 5%">
		<p>To exit one of these example submenus to the Example menu again, simply click on the sideways chevron in the upper-righthand corner of the submenu list.</p>
		<image source="images/backchevron.png"><description>back chevron</description></image>
	</sidebyside>
</section> 
</chapter>


<chapter>
    <title>Exploring Multivariable Calculus</title>
        <section xml:id="section-vectorexplorations">
	         <title>Vector Explorations</title>
	         <p>Much of multivariable calculus depends, to some degree, on a clear understanding of vectors.  To address the geometric nature of vectors and help students to explore the geometric significance of vectors operations, a special mode exists in CalcPlot3D titled, <alert>Vector Operations</alert>.</p>
	         <sidebyside widths="60% 40%">
		         <p>To access these Vector Explorations, open the main menu â˜° and select the <alert>View Vector Explorations</alert> option on the <alert>File</alert> menu.</p>
		         
		         <image source="images/viewvectorexplorationsmenu.png"><description>vector exploration menu option</description></image>
		     </sidebyside>
		     <p>Once it is open, you should see the following view of the app, showing the 2D Trace Plot on the left and the Vector Exploration control panel just below it, with a dashed green border.</p>
	         <figure xml:id="figure-vectorexp-default">
	         	<caption>Vector Explorations default view</caption>
	         	<image source="images/vectors-anglebetweendefault.png"><description>vector explorations default view</description></image>
	         </figure>
	         <p><m>\Large\textbf{General Options:}</m></p>
	         <p>In each exploration, you can adjust the red and blue vectors by clicking and dragging the tip of either vector.</p>
	         <p>By default, the two vectors are fixed with a length of 2.  This allows for the geometric significance of some of the vector operations to be more clear.</p>
	         <p>However, you can choose instead to free the vectors (clicking on <alert>Free vectors</alert>), so that you can adjust the lengths of each one to see the effect.  Note that when you select this option, a new panel will open below allowing you to vary the components of each vector using a textbox or slider.</p>
	         <p>The Common Vertex is <m>(0, 0, 0)</m>, by default.  Eventually this vertex will be able to be changed, but not yet.</p>
	         <p>By default, there are gridlines shown in the <m>xy</m>-plane to help make vectors in the <m>xy</m>-plane more clear.  Deselect the option <alert>Show <m>xy</m>-gridlines in 3D plot</alert> to hide these gridlines.  They may be distracting when viewing the vectors in 3D.</p>
	         <p>By default, the two vectors are kept in the <m>xy</m>-plane, but you can explore the two vectors in 3D by selecting the option to <alert>Vary vectors in 3D</alert>, as you can see in <xref ref="figure-anglebetween3d"/>.</p>
	         <figure xml:id="figure-anglebetween3d">
	         	<caption>Showing the angle between two 3D vectors</caption>
	         	<image source="images/vectors-anglebetween3d.png"><description>The angle btween two 3D vectors</description></image>
	         </figure>
	         <p>Note that the vectors in the 2D trace plot show only the projections of the red and blue vectors onto the <m>xy</m>-plane, while the 3D plot shows the 3D vectors.  Dashed lines help to emphasize the 3D location of the tip of each vector.</p>
	         <p>Also note that several new options are provided when <alert>Vary vectors in 3D</alert> is selected.
	         <dl width="medium">
	         	<li><title><m>z</m>-coordinate sliders</title>
	         	    <p>These allow you to vary the <m>z</m>-coordinates of the red and blue vectors.</p>
	         	</li>
	         	<li><title>Show dashed support lines in 3D</title>
	         	    <p>Displayed by default to help visualize the 3D nature of each 3D vector.</p>
	         	</li>
	         	<li><title>Vary <m>z</m> on sphere using <m>xy</m>-plane</title>
	         	    <p>This option allows for you to vary the vectors on the 2D trace plane forcing the vectors to have a common length in 3D.  When this option is not checked, clicking and dragging either red or blue vector in the 2D trace plane only affects the <m>x</m>- and <m>y</m>-components of the vector, leaving the <m>z</m>-component unchanged.</p>
	         	</li>
	         </dl></p>
	         <p>Note that some additional options will be provided in some of the explorations described below.  These will be described below, where available.</p>

	         <p><m>\Large\textbf{List of Vector Explorations:}</m></p>
	         <sidebyside widths="60% 40%">
	         	<p>Clicking on the Vector Explorations dropdown menu allows you to select which vector operation to explore.</p>
	         	<image source="images/vectorexplorationsmenu.png"><description>Vector Explorations Menu</description></image>
	         </sidebyside>
	         <p><dl width="narrow">
	         	<li><title>default mode:</title>
                    <p>When the vector explorations mode is first selected (or when the dropdown option <q>Vector Explorations...</q> is selected), no particular vector operation is selected and the user can simply explore the two vectors using the various available options.</p>
                    <figure xml:id="figure-vectors-anglebetween">
                    	<caption>Exploring the angle between two vectors</caption>
                    	<image source="images/vectors-anglebetween.png"><description>vectors-angle between</description></image>
                    </figure>
	            </li>
	            <li><title>Vector Sum:</title>
                    <p>Selecting the <alert>Vector Sum</alert> exploration displays not only the red and blue vectors, but also the resultant vector obtained by adding the blue vector to the red vector.  Additionally a copy of the blue vector is placed so its tail rests at the tip of the red vector to demonstrate the tail-to-tip method of adding vectors geometrically.</p>
                    <figure xml:id="figure-vectors-vectorsum">
                    	<caption>Exploring the sum of two vectors</caption>
                    	<image source="images/vectors-vectorsum.png"><description>vectors-sum</description></image>
                    </figure>
	            </li>
	            <li><title>Vector Difference:</title>
                    <p>Similarly, the Vector Difference exploration displays the geometric interpretation of the differnce of two vectors.  Since there are at least two ways to think of this, two options are given in this mode, allowing both to be explored visually.</p>
                    <p><alert>Option 1</alert> displays the most useful interpretation of a vector difference, showing its tail at the tip of the vector being subtracted and its tip at the tip of the vector coming first in the difference.  That is, the vector <m>\overset{\rightharpoonup}{\mathbf v} - \overset{\rightharpoonup}{\mathbf u}</m> will go from the tip of vector <m>\overset{\rightharpoonup}{\mathbf u}</m> to the tip of vector <m>\overset{\rightharpoonup}{\mathbf v}</m>.</p>
                    <figure xml:id="figure-vectors-difference1">
                    	<caption>Exploring the difference of two vectors</caption>
                    	<image source="images/vectors-difference1.png"><description>vectors-difference, option 1</description></image>
                    </figure>
                    <p><alert>Option 2</alert> displays a second interpretation of the vector difference.  In this case, <m>\overset{\rightharpoonup}{\mathbf v} - \overset{\rightharpoonup}{\mathbf u}</m> is represented as the vector sum, <m>\overset{\rightharpoonup}{\mathbf v} + (-\overset{\rightharpoonup}{\mathbf u})</m>.  Then the negative of vector <m>\overset{\rightharpoonup}{\mathbf u}</m> is added, showing its tail at the tip of the vector <m>\overset{\rightharpoonup}{\mathbf v}</m>.</p>
                    <figure xml:id="figure-vectors-difference2">
                    	<caption>Exploring the difference of two vectors</caption>
                    	<image source="images/vectors-difference2.png"><description>vectors-difference, option 2</description></image>
                    </figure>
	            </li>
	            <li><title>Scalar Factor:</title>
                    <p>This option shows the scalar product of the blue vector, here named <m>\overset{\rightharpoonup}{\mathbf u}</m> multiplied by the scalar, <m>c</m>.  This exploration option provides a textbox and slider to adjust the value of the scalar, <m>c</m>.</p>
                    <figure xml:id="figure-vectors-scalarfactor">
                    	<caption>Exploring the scalar product</caption>
                    	<image source="images/vectors-scalarproduct.png"><description>vectors-scalar product</description></image>
                    </figure>
	            </li>
	            <li><title>Dot Product Exploration:</title>
                    <p>This exploration shows the value of the dot product of the red and blue vectors as well as the angle between them.</p>
                    <figure xml:id="figure-vectors-dotproduct">
                    	<caption>Exploring the dot product of two vectors</caption>
                    	<image source="images/vectors-dotproduct.png"><description>vectors-dot product exploration</description></image>
                    </figure>
	            </li>
	            <li><title>Cross Product Exploration:</title>
                    <p>This exploration shows a red vector in the 3D plot to represent the cross-product vector formed by taking the cross product of the red and blue vectors in an order specified by the <alert>Order</alert> option tab.  The cross product's magnitude and the angle between the two vectors are displayed at the top of the 3D plot.</p>
                    <p>For this exploration, it is especially helpful select the option to <alert>Vary vectors in 3D</alert>, so that you can see how the cross product vector is affected when the vectors forming it are not both on the <m>xy</m>-plane.</p>
                    <figure xml:id="figure-vectors-crossproduct">
                    	<caption>Exploring the cross product of two vectors</caption>
                    	<image source="images/vectors-crossproduct.png"><description>vectors-cross product exploration</description></image>
                    </figure>
	            </li>
	            <li><title>Projection Exploration:</title>
                    <p>This exploration allows you to explore the projection of the blue vector onto the red vector.  The projection vector is displayed in orange.  Note that you also have the option here to display the <m>\overset{\rightharpoonup}{\mathbf u}</m>-perp vector (the vector component of the vector <m>\overset{\rightharpoonup}{\mathbf u}</m> that you would need to add to the projection vector to obtain <m>\overset{\rightharpoonup}{\mathbf u}</m>).</p>
                    <figure xml:id="figure-vectors-projection">
                    	<caption>Exploring the projection of one vector onto another</caption>
                    	<image source="images/vectors-projection.png"><description>vectors-projection exploration</description></image>
                    </figure>
	            </li>
	         </dl></p>
	    </section>
	    <section>
	         <title>Points, Lines &amp; Planes in Space</title>
	         <introduction>
	         	<p>CalcPlot3D makes it easy to explore the relationships between points, lines, and planes in space.  Below are some explorations to help you see how this can be done.</p>
	         </introduction>
	         <subsection>
	            <title>The Plane through Three Non-Collinear Points</title>
	            <idx><h>plane</h><h>through 3 non-collinear points</h></idx>
	      <!--      <p>Finding the equation of the plane determined by three non-collinear points and visually verifying that the plane contains these three points.</p>  -->
          <!--      <exercises>
                <exercise>  -->
                <exploration xml:id="exploration-3pointplane">
                        <statement>
						<p>a. Find the equation of the plane containing the points <m>(2, 0, 1)</m>, <m>(-1, 2, 3)</m>, and <m>(0, 2, -2)</m>.</p>
						<p>b. Graph this plane along with the three points to verify that all three
						points lie on the plane. To do this, first solve the plane equation for <m>z</m> and graph the plane, 
						entering it in the provided function box on the left. To see its graph, either press enter on the function or click the <alert>Graph</alert> button.
						Just above this function there should be a dropdown menu labeled: <alert>Add to graph</alert>.  
						Select to <alert>add a Point (x, y, z)</alert>, entering the coordinates of one of the points. You can use the default size and colors.
						(If you wish to vary these settings, be sure the points still show up well in the printout.)
						Note that the checkbox to the left of a function, point, or other object needs to be selected if you wish to see that object in the plot.</p>
						<p>Repeat these steps to add the other two points. Rotate the plot to verify that all the points lie on the plane and then find
						a clear view of the plane with the three points on it. Use the <alert>Print Plot</alert> menu option on the <alert>File</alert> menu at the top left corner
						of the CalcPlot3D app to print out your resulting view and hand this printout in with this assignment.</p>
						</statement>
						<answer>
						<p>Answer: The plane equation is: <m>z = (22 â€“ 10x â€“ 13y)/2</m></p>
						<figure>
					        <caption>Solution plot for <xref ref="exploration-3pointplane" /></caption>
							<interactive calcplot3d="type=z;z=(22-10x-13y)/2;visible=true;umin=-2;umax=2;vmin=-2;vmax=2;grid=30;format=normal;alpha=-1;constcol=rgb(255,0,0);view=0;contourcolor=red;fixdomain=false&amp;type=point;point=(2,0,1);visible=true;color=rgb(0,0,0);size=4&amp;type=point;point=(-1,2,3);visible=true;color=rgb(0,0,0);size=4&amp;type=point;point=(0,2,-2);visible=true;color=rgb(0,0,0);size=4&amp;type=window;hsrmode=0;nomidpts=true;anaglyph=-1;center=-9.045084971874711,-2.938926261462361,3.0901699437494745,1;focus=0,0,0,1;up=0,0,2,1;transparent=false;alpha=140;twoviews=false;unlinkviews=false;axisextension=0.7;xaxislabel=x;yaxislabel=y;zaxislabel=z;edgeson=true;faceson=true;showbox=true;showaxes=true;showticks=true;perspective=true;centerxpercent=0.4;centerypercent=0.5;rotationsteps=30;autospin=true;xygrid=false;yzgrid=false;xzgrid=false;gridsonbox=true;gridplanes=false;gridcolor=rgb(128,128,128);xmin=-2;xmax=2;ymin=-2;ymax=2;zmin=-2;zmax=2;xscale=1;yscale=1;zscale=1;zcmin=-4;zcmax=4;zoom=0.65;xscalefactor=1;yscalefactor=1;zscalefactor=1" variant="minimal" width="60%">
								<static>
									<image width="50%" source="images/threepointplane.png"><description>Plane thru 3 points</description></image>
								</static>
							</interactive>
						</figure>
			<!--			<image width="50%" source="images/threepointplanelarge.png"><description>Plane thru 3 points</description></image> -->
						
						</answer>
           <!--     </exercise>
                </exercises>  -->
                </exploration>
            </subsection>
            <subsection>
                <title>The Line of Intersection of Two Planes</title>
                <idx><h>intersection</h><h>of two planes</h></idx>
                <exploration xml:id="exploration-plane-intersection">
                    <statement>
                        <p>a. Determine the line of intersection of the following two planes. Write the parametric equations for this line, showing all work.</p>
						<p><me>2x + y â€“ 2z = 5 \quad\text{and}\quad 3x â€“ 6y â€“ 2z = 15</me></p>
						<p>b. Use the <url href="https://c3d.libretexts.org/CalcPlot3D/index.html">CalcPlot3D app</url> to display these two planes.
						To do this, solve each planar equation for <m>z</m>, and enter them in the app, using two function objects.
						There is one there when you open the app, and you can add another by selecting <alert>Function: <m>z = f(x, y)</m></alert> on the <alert>Add to graph</alert> menu.
						Zoom out a couple times (if necessary) until you can see both planes along with their intersection.
						Now add the line of intersection. (To do this, choose <alert>Space Curve: r(t)</alert> from the <alert>Add to graph</alert> menu,
						and enter the parametric equations for the line.) Rotate the 3D view to verify that your line is indeed the intersection of the two planes.
						Rotate until you have a good view of the two planes and the line of intersection.
						Use the <alert>Print Plot</alert> menu option on the <alert>File</alert> menu at the top left corner of the CalcPlot3D app
						to print out your resulting view and hand this printout in with this assignment.</p>
                    </statement>
					<answer>
					     <p>Answer Line:</p>
					     <p><md>
							<mrow>x &amp;= 3 + 14t</mrow>
							<mrow>y &amp;=-1+ 2t</mrow>
							<mrow>z &amp;=15t</mrow>
                         </md></p>
						<p>Here are the plane equations, solved for <m>z</m>:</p>
						<p><md>
						    <mrow>z &amp;= (2x + y â€“ 5)/2</mrow>
						    <mrow>z &amp;= (3x â€“ 6y â€“ 15)/2</mrow>
					    </md></p>
					   
					    <figure>
					        <caption>Solution plot for <xref ref="exploration-plane-intersection" /></caption>
							<interactive calcplot3d="type=z;z=(2x+y-5)/2;visible=true;umin=-4;umax=4;usteps=100;vmin=-4;vmax=4;grid=30;format=normal;alpha=-1;constcol=rgb(255,0,0);view=0;contourcolor=red;fixdomain=false&amp;type=z;z=(3x-6y-15)/2;visible=true;umin=-4;umax=4;vmin=-4;vmax=4;grid=30;format=reversed;alpha=-1;constcol=rgb(255,0,0);view=0;contourcolor=red;fixdomain=false&amp;type=spacecurve;spacecurve=curve;x=3+14t;y=-1+2t;z=15t;visible=true;tmin=-10;tmax=10;tsteps=100;color=rgb(255,0,0);showtrace=false;tval=0;constcol=true;twod=false;showpt=true;trace=true;vel=true;acc=true;osc=false;k=false;repeat=false;bounce=false;showtvector=false;shownvector=false;showbvector=false;showtnbeqs=false;showtnblabels=false;showoscplane=false;showrectplane=false;shownormplane=false&amp;type=window;hsrmode=0;nomidpts=false;anaglyph=-1;center=-18.18893923225377,0.9865403460673894,8.257676897950827,1;focus=0,0,0,1;up=0.4151197357615459,0.05010330209904306,0.9083860765665863,1;transparent=false;alpha=140;twoviews=false;unlinkviews=false;axisextension=0.7;xaxislabel=x;yaxislabel=y;zaxislabel=z;edgeson=true;faceson=true;showbox=true;showaxes=true;showticks=true;perspective=true;centerxpercent=0.4;centerypercent=0.5;rotationsteps=30;autospin=true;xygrid=false;yzgrid=false;xzgrid=false;gridsonbox=true;gridplanes=false;gridcolor=rgb(128,128,128);xmin=-4;xmax=4;ymin=-4;ymax=4;zmin=-4;zmax=4;xscale=2;yscale=2;zscale=2;zcmin=-8;zcmax=8;zoom=0.2;xscalefactor=1;yscalefactor=1;zscalefactor=1" variant="minimal" width="60%">
								<static>
									<image width="50%" source="images/planeintersection.png"><description>Line of Intersection of Two Planes</description></image>
								</static>
							</interactive>
						</figure>
		<!--			<image width="50%" source="images/threepointplanelarge.png"><description>Plane thru 3 points</description></image> -->
					</answer>
                </exploration>
            </subsection>
	    </section>
	    <section>
	         <title>*Vector-Valued Functions</title>
	         <introduction><p>Vector-valued functions allow us to represent a set of parametric equations defining a curve in the <m>xy</m>-plane or in space as a single function of time.  The outputs of vector-valued functions are vectors, as their name clearly indicates.  The vector output can be said to point to the location of a particle that is traveling along the curve it defines.</p></introduction>
	         <subsection>
	         	<title>Parameterizing the graph of a function, <m>y=f(x)</m></title>
	         	<p><dl width="medium">
	         		<li><title>From left-to-right:</title>
	         		    <p></p>
	         	    </li>
	         	    <li><title>From right-to-left:</title>
	         		    <p></p>
	         	    </li>
	         	</dl></p>
	         </subsection>
	         <subsection>
	         	<title>Various Parameterizations of a path</title>
	         	<p></p>
	         </subsection>
	         <subsection>
	         	<title>Synchronized Space Curves</title>
	         	<p><dl width="medium">
	         		<li><title>Piecewise-defined vector-valued functions:</title>
	         		    <p></p>
	         	    </li>
	         	    <li><title>Synchronizing motion along multiple curves at the same time:</title>
	         		    <p></p>
	         	    </li>
	         	</dl></p>
	         </subsection>

	    </section>
	    <section>
	         <title>Intersections of General Surfaces</title>
	         <idx><h>intersection</h><h>of any two surfaces</h></idx>
	         <p>Although CalcPlot3D does not determine the intersection of two surfaces for you, it does make a great tool for visually checking that the parameterization you have worked out as the intersection of two surfaces is indeed correct.</p>
	         <p>Below you will find two examples to explore this concept.  Hopefully this visualization process will help increase your confidence in and your appreciation for the results you have obtained.</p>
             <exploration xml:id="exploration-surface-intersections1">
                <statement>
                    <p>Determine the vector-valued function that traces out the intersection of the surfaces defined by the equations below using the parameter <m>t</m>.</p>
					<p><me>z = x^2 + y^2\quad\text{and}\quad y=x^2</me></p>
					<p>State the answer as a vector-valued function.  Then visually verify this result, plotting the two surfaces in CalcPlot3D, and then plotting the curve to check that it really does represent the intersection of these two surfaces.</p>
                </statement>
				<answer>
					<p>Here we can let <m>x=t</m>.  Then <m>y=t^2</m>.  What does <m>z</m> equal (as a function of <m>t</m>)?</p>
				    <p>Then the vector-valued function we obtain that traces out the intersection of these surfaces is:</p>
					<p><me>\vec{\textbf{r}}(t) = t \hat{\textbf{i}} + t^2 \hat{\textbf{j}} + (t^2 + t^4) \hat{\textbf{k}}</me></p>
				    <p>This represents the same curve as specified by the parametric functions:<md>
						<mrow>x &amp;= t</mrow>
						<mrow>y &amp;=t^2</mrow>
						<mrow>z &amp;=t^2 + t^4</mrow>
                    </md></p>
                    <p>Now letâ€™s verify this in CalcPlot3D visually!</p>
                    <p>a. Open the <url href="https://c3d.libretexts.org/CalcPlot3D/index.html">CalcPlot3D app</url>.</p>
                    <p>b. Once the app is loaded and active, enter the first function listed above (<m>z =</m> <c>x^2 + y^2</c>) in the default function object on the left and press Enter (or click on the Graph button). The surface plot of this paraboloid should appear in the plot window.</p>
                    <p>c. Now, to enter the second function, go to the <alert>Add to graph</alert> dropdown menu (just above the default function), and select <c>Function: y = f (x, z)</c>. This will set the function to y = 1 by default. Enter <c>x^2</c> in the textbox and press Enter (or use the Graph button).</p>
                    <p>d. To extend the second surface farther up the paraboloid, change the range of <m>z</m> (just below <c>y = x^2</c>) to go from -2 to 4. You may want to use the scroll-wheel on the mouse to zoom-out a little. [Alternatively you could click on the <c>Format Axes</c> button located just to the right of the <c>3D Mode</c> button. Then set <m>z</m>-max to 4. This will automatically change the <alert>upper <m>z</m>-clip</alert> value to 8. Letâ€™s change this value to 4 also.]</p>
                    <p>e. Make the surfaces semi-transparent using the button or by typing the <c>T</c> key to get a clearer view of the intersection of the surfaces. Press the <c>E</c> key to turn off the edges on the surfaces.</p>
                    <p>f. Next we need to graph the space curve to see how well it fits the intersection of the surfaces. Select <c>Space Curve: r(t)</c> from the <alert>Add to graph</alert> dropdown menu.  A space curve object should appear just below this menu.</p>
                    <p>Enter the three parametric equations we obtained (each in terms of <m>t</m>). Then enter a range of -2 to 2. If you press Enter on the second value, it should produce the curve on the plot. If it does not appear, click the <c>Graph</c> button.</p>
                    <p>g. I like the look of this one better with a constant color, so select the checkbox titled <alert>Use Constant Primary Color</alert>, at the bottom of this object.</p>
                    <p>h. Finally rotate the graph to see if it looks like we found the correct intersection curve. Except for different coloring, this should look like the image in <xref ref="figure-intersection1" /> below.</p>

                    <figure xml:id="figure-intersection1">
						<caption>Intersection of the surfaces <m>z = x^2 + y^2\quad\text{and}\quad y=x^2</m>.</caption>
						<image width="50%" source="images/intersection1.png"><description>Intersection of two surfaces</description></image>
				    </figure>
				</answer>
            </exploration>
            <exploration xml:id="exploration-surface-intersections2">
                <statement>
                    <p>Determine the vector-valued function that traces out the intersection of the surfaces defined below, assuming that <m>y = 2\sin t</m>.</p>
					<p><me>2x^2 + y^2=4\quad\text{and}\quad z = x^2 + y^2</me></p>
					<p>State the answer as a vector-valued function.  Then visually verify the result, plotting the two surfaces in CalcPlot3D, and then plotting the curve to check that it really does represent the intersection of these two surfaces.</p>
                </statement>
				<answer>
					<p>Note that we can parameterize the ellipse given by the first equation with</p>
					<p><me>x = \sqrt{2}\cos t \quad\text{and}\quad y = 2\sin t</me>.</p>
					<p>Now that we've parameterized <m>x</m> and <m>y</m>, the second surface equation makes it easy to determine <m>z</m> in terms of <m>t</m>.</p>
					<p>After simplifying the expression, we obtain, <m>z = 2 + 2\sin^2 t</m>.</p>
				    <p>Then the vector-valued function we obtain that traces out the intersection of these surfaces is:</p>
					<p><me>\vec{\textbf{r}}(t) = \sqrt{2}\cos t \hat{\textbf{i}} + 2\sin t \hat{\textbf{j}} + (2 + 2\sin^2 t) \hat{\textbf{k}}</me></p>
				    <p>This represents the same curve as specified by the parametric functions:<md>
						<mrow>x &amp;= \sqrt{2}\cos t</mrow>
						<mrow>y &amp;= 2\sin t</mrow>
						<mrow>z &amp;= 2 + 2\sin^2 t</mrow>
                    </md></p>
                    <p>Now letâ€™s verify this in CalcPlot3D visually!</p>
                    <p>a. Open the <url href="https://c3d.libretexts.org/CalcPlot3D/index.html">CalcPlot3D app</url>.</p>
                    <p>b. Once the app is loaded and active, enter the second function listed above (z = x2 + y2) in the default function object on the left and press Enter (or click on the Graph button). The surface plot of this paraboloid should appear in the plot window.</p>
                    <p>c. Now, to enter the first function, which is stated implicitly, go to the <alert>Add to graph</alert> dropdown menu (just above the default function), and select <alert>Implicit Surface</alert>. Once this new object definition appears on the left, enter the implicit equation defining the first surface in the textbox and press Enter (or use the Graph button).  This surface should look like an elliptic cylinder.</p>
                    <p>d. To make the intersection more clear, let's first zoom out once using the <c>Zoom-out</c> button, so the <m>x</m>- and <m>y</m>-axes run from -4 to 4 instead of from -2 to 2. Now click on the <c>Format Axes</c> button located just to the right of the <c>3D Mode</c> button, and set the <alert>upper <m>z</m>-clip</alert> to 4.</p>
                    <p>e. Next make the surfaces semi-transparent using the transparency button or by typing the <c>T</c> key to get a clearer view of the intersection of the surfaces. Press the <c>E</c> key to turn off the edges on the surfaces.</p>
                    <p>f. Next we need to graph the space curve to see how well it fits the intersection of the surfaces. Select <c>Space Curve: r(t)</c> from the <alert>Add to graph</alert> dropdown menu.  A space curve object should appear just below this menu.</p>
                    <p>Enter the three parametric equations we obtained (each in terms of <m>t</m>).</p>
                    <p>You will enter them like this:<md>
						<mrow>x &amp;= \textbf{sqrt(2)cos(t)}</mrow>
						<mrow>y &amp;= \textbf{2sin(t)}</mrow>
						<mrow>z &amp;= \textbf{2 + 2(sin(t))\^{}2}</mrow>
                    </md></p>
                    <p>g. Now enter a range of 0 to <m>2\pi</m>. If you press Enter on the second value, it should produce the curve on the plot. If it does not appear, click the <c>Graph</c> button.</p>
                    <p>I also like the look of this one better with a constant color, so select the checkbox titled <alert>Use Constant Primary Color</alert>, at the bottom of this object.</p>
                    <p>h. Finally rotate the graph to see if it looks like we found the correct intersection curve. This should look like the image in <xref ref="figure-intersection2" /> below.</p>

                    <p>Notice that the intersection of these two surfaces may appear a little polygonal rather than smooth like the curve we just graphed.  This is because we used an implicit surface with the default resolution.  To improve this resolution, you can adjust the <alert># Cubes/axis</alert> to a higher number, like 25.  See the result in <xref ref="figure-intersection2b" />.</p>
                    <sidebyside widths="50.5% 49.5%">
	                    <figure xml:id="figure-intersection2">
							<caption>Intersection of the surfaces <m>2x^2 + y^2=4\quad\text{and}\quad z = x^2 + y^2</m>.</caption>
							<image width="50%" source="images/intersection2.png"><description>Intersection of two surfaces</description></image>
					    </figure>
					    <figure xml:id="figure-intersection2b">
							<caption>Intersection of the surfaces <m>2x^2 + y^2=4\quad\text{and}\quad z = x^2 + y^2</m>, using a higher resulution on the implicit surface.</caption>
							<image width="50%" source="images/intersection2b.png"><description>Intersection of two surfaces</description></image>
					    </figure>
				    </sidebyside>
				</answer>
            </exploration>
	    </section>
        <section xml:id="section-contourplots">
	         <title>*Contour Plots</title>
	         <idx><h>contour plot</h></idx><idx><h>level curves</h></idx><idx><h>contours</h></idx>
	         <p>A contour plot provides a 2D topographical map of a 3D surface, showing contours (or level curves) that trace out the parts of the surface that have the same <m>z</m>-coordinate.</p>
	         <sidebyside widths="50% 50%">
		         <p>To generate a contour plot of a function of 2 variables in CalcPlot3D, we first need to plot the function we are interested in.  Then we will find a contour plot button on the function object that we can use to create the corresponding contour plot.</p>
		         <image source="images/functionfxy.png"><description>Contour plot button on function object</description></image>
		     </sidebyside>
	    </section>
	    <section xml:id="section-levelsurfaces">
	         <title>Level Surfaces</title>
	         <idx><h>level surfaces</h></idx><idx><h>surfaces</h><h>level</h></idx>
	         <p><dl width="narrow"><li>
	               <title>Video:</title>
	               <p>Here is a <url href="https://www.youtube.com/embed/lqiXsYYUb-I?rel=0"><alert>short video about Level Surfaces</alert></url> in CalcPlot3D created by Professor Larry Green of Lake Tahoe Community College.</p>
	            </li></dl>
			 </p>
	         <p>It is difficult to draw many interesting level surfaces by hand, but CalcPlot3D helps us explore them easily.</p>
	         <p>There are actually two ways to enter and graph the level surface equations for a particular function of three variables in CalcPlot3D:
                 <ol><li>Solve each equation for <m>z</m> in terms of <m>x</m>, <m>y</m>, and <m>C</m> and enter the level surface using one or two functions of <m>x</m> and <m>y</m>, or</li>
                     <li>Graph the level surface equation by adding an <alert>Implicit Surface</alert> from the <alert>Add to graph</alert> menu and entering the equation for the level surface.</li>
                 </ol>
             </p>
             <p>If the surfaces are complicated enough, you may not have a choice. If you are not able to solve for <m>z</m>, you will need to use the <alert>Implicit Surface</alert> option.</p>
            <exploration xml:id="exploration-level-surfaces">
                <statement>
					<p>Here is an example shown both ways.</p>
					<p>Let <m>f(x,y,z) = z^2 â€“x^2 +y^2</m>.</p>
					<p>Determine equations for the level surfaces for this function with <m>C = -2</m> and <m>C = 2</m>
					and plot them separately in CalcPlot3D.</p>
					<p><m>\large\textbf{Solution: Method 1:}</m> Solving for <m>z</m> and graphing both parts of the level surface</p>
					<p>Setting <m>f (x, y, z) = z^2 â€“ x^2 + y^2 = C</m>, and solving for <m>z</m>, we obtain the following equations:</p>
					<p><md>
							<mrow>z &amp;= \sqrt{C + x^2 - y^2}</mrow>
							<mrow>z &amp;= -\sqrt{C + x^2 - y^2}</mrow>
						</md></p>
					<p>In a form for us to enter in CalcPlot3D these are:</p>
					<p><c>z = sqrt(C + x^2 - y^2)</c></p>
					<p><c>z = -sqrt(C + x^2 - y^2)</c></p>
					<p>For <m>C = -2</m>, we enter:</p>
					<p><c>z = sqrt(-2 + x^2 - y^2)</c> in the 1st function and <c>z = -sqrt(-2 + x^2 - y^2)</c> in a 2nd function.</p>
				
					<figure>
						<caption>Level surface, <m>C = -2</m></caption>
						<interactive calcplot3d="type=z;z=-sqrt(-2+x^2-y^2);visible=true;umin=-4;umax=4;vmin=-4;vmax=4;grid=30;format=reversed;alpha=-1;constcol=rgb(255,0,0);view=0;contourcolor=red;fixdomain=false&amp;type=z;z=sqrt(-2+x^2-y^2);visible=true;umin=-4;umax=4;vmin=-4;vmax=4;grid=30;format=reversed;alpha=-1;constcol=rgb(255,0,0);view=0;contourcolor=red;fixdomain=false&amp;type=window;hsrmode=0;nomidpts=true;anaglyph=-1;center=-8.270108132492869,17.434097758282633,5.259044288794762,1;focus=0,0,0,1;up=0.06540861657849147,-0.14679188379427732,0.9870024598395972,1;transparent=false;alpha=140;twoviews=false;unlinkviews=false;axisextension=0.7;xaxislabel=x;yaxislabel=y;zaxislabel=z;edgeson=true;faceson=true;showbox=true;showaxes=true;showticks=true;perspective=true;centerxpercent=0.45;centerypercent=0.5;rotationsteps=30;autospin=true;xygrid=false;yzgrid=false;xzgrid=false;gridsonbox=true;gridplanes=false;gridcolor=rgb(128,128,128);xmin=-4;xmax=4;ymin=-4;ymax=4;zmin=-4;zmax=4;xscale=2;yscale=2;zscale=2;zcmin=-8;zcmax=8;zoom=0.2;xscalefactor=1;yscalefactor=1;zscalefactor=1" variant="minimal" width="60%">
							<static>
								<image width="50%" source="images/LevelSurfaceC-2.png"><description>Level surface, C = -2</description></image>
							</static>
						</interactive>
					</figure>
				    <p>For <m>C = 2</m>, we enter:</p>
					<p><c>z = sqrt(2 + x^2 - y^2)</c> in the 1st function and <c>z = -sqrt(2 + x^2 - y^2)</c> in a 2nd function.</p>
					<figure>
						<caption>Level surface, <m>C = 2</m></caption>
						<interactive calcplot3d="type=z;z=-sqrt(2+x^2-y^2);visible=true;umin=-4;umax=4;vmin=-4;vmax=4;grid=30;format=reversed;alpha=-1;constcol=rgb(255,0,0);view=0;contourcolor=red;fixdomain=false&amp;type=z;z=sqrt(2+x^2-y^2);visible=true;umin=-4;umax=4;vmin=-4;vmax=4;grid=30;format=reversed;alpha=-1;constcol=rgb(255,0,0);view=0;contourcolor=red;fixdomain=false&amp;type=window;hsrmode=0;nomidpts=true;anaglyph=-1;center=-8.270108132492869,17.434097758282633,5.259044288794762,1;focus=0,0,0,1;up=0.06540861657849147,-0.14679188379427732,0.9870024598395972,1;transparent=false;alpha=140;twoviews=false;unlinkviews=false;axisextension=0.7;xaxislabel=x;yaxislabel=y;zaxislabel=z;edgeson=true;faceson=true;showbox=true;showaxes=true;showticks=true;perspective=true;centerxpercent=0.45;centerypercent=0.5;rotationsteps=30;autospin=true;xygrid=false;yzgrid=false;xzgrid=false;gridsonbox=true;gridplanes=false;gridcolor=rgb(128,128,128);xmin=-4;xmax=4;ymin=-4;ymax=4;zmin=-4;zmax=4;xscale=2;yscale=2;zscale=2;zcmin=-8;zcmax=8;zoom=0.2;xscalefactor=1;yscalefactor=1;zscalefactor=1" variant="minimal" width="60%">
							<static>
								<image width="50%" source="images/LevelSurfaceC2.png"><description>Level surface, C = 2</description></image>
							</static>
						</interactive>
					</figure>       
					
					
					<p><m>\large\textbf{Solution: Method 2}</m> Using an Implicit Surface</p>
					<p>Setting <m>f (x, y, z) = z^2 â€“ x^2 + y^2 = C</m>, we can write a single implicit equation for each level surface.</p>
					<p>For <m>C = -2</m>, we will plot the implicit equation: <m>z^2 - x^2 + y^2 = -2</m></p>
					<p>For <m>C = 2</m>, we will plot the implicit equation:  <m>z^2 - x^2 + y^2 = 2</m></p>
					<p>To do this,
					   <ol>
					       <li>We clear the screen by clicking on the clear screen button.</li>
					       <li>Then we select to add an <alert>Implicit Surface</alert> from the <alert>Add to graph</alert> menu.</li>
					       <li>Enter <c>z^2 - x^2 + y^2 = -2</c> in the corresponding textbox and select the checkbox (or press enter) to plot it.
					       This is the level surface for <m>C = -2</m>.</li>
					       <li>Print it out, if desired, using the <alert>Print Plot</alert> option on the app main menu.</li>
					       <li>To view the level surface for <m>C = 2</m>, just change the <m>-2</m> on the right side of the equation to a <m>2</m>.</li>
					   </ol>
				    </p>
				    <sidebyside widths="50% 50%">
						<figure>
							<caption>Level surface, <m>C = -2</m></caption>
							<image width="50%" source="images/LevelSurfaceC-2imp.png"><description>Level surface, C = -2</description></image>
						</figure>
						<figure>
							<caption>Level surface, <m>C = 2</m></caption>
							<image width="50%" source="images/LevelSurfaceC2imp.png"><description>Level surface, C = 2</description></image>
						</figure> 
					</sidebyside>               
                </statement>
            </exploration>
	    </section>
	    <section>
	         <title>*Partial Derivatives</title>
	         <p></p>
	    </section>
	    <section>
	         <title>*Directional Derivatives</title>
	         <p></p>
	    </section>
	    <section>
	         <title>*Tangent Planes</title>
	         <p></p>
	    </section>
	    <section>
	         <title>*Taylor Polynomials in Two-Variables</title>
	         <p></p>
	    </section>
	    <section>
	         <title>*Gradients</title>
	         <p></p>
	    </section>
	    <section>
	         <title>*Lagrange Multiplier Optimization</title>
	         <p></p>
	    </section>
	    <section>
	         <title>*Regions of Integration</title>
	         <p></p>
	    </section>
	    <section>
	         <title>*Vector Fields</title>
	         <p></p>
	    </section>
	    <section>
	         <title>*Line Integrals for Work</title>
	         <p></p>
	    </section>
</chapter>

<chapter>
    <title>Exploring Differential Equations</title>
    <introduction><p>When students can visualize the concepts they are learning, 
	 they will understand these concepts more deeply, and find it easier to remember them and connect them to related topics. 
	 In differential equations, we have a number of opportunities to visualize the topics we study.</p>
	</introduction>
	    <section>
	         <title>Using the Direction Field Explorer app</title>
	         <subsection>
				 <title>Visualizing 1st-order Differential Equations</title>
				 <idx><h>differential equations</h><h>visualizing 1st-order</h></idx>
				 <p>In differential equations we begin by studying many applications of first-order differential equations.
				 We learn how these equations are derived from the language of the problems, and then we examine the direction fields
				 associated with each equation to make predictions, consider equilibria and to analyze the situations.</p>
				 <p>We can use the <url href="https://c3d.libretexts.org/DirectionField/index.html"><alert>Direction Field Explorer app</alert></url>
				 to visually explore the direction fields associated with
				 any first order differential equation that can be solved for the first derivative.</p>
				 <p>We can also visually verify the general solution to these first-order differential equations.</p>
				 <figure xml:id="figure-directionFieldapp">
                    <caption>Direction Field Explorer app</caption>
				    <image width="100%" source="images/directionFieldapp.png"><description>Direction Field Explorer image</description></image>
				 </figure>
				 <p>To do so, follow the steps below:</p>
				 <p>
				 <ol>
				 <li>Enter the differential equation, solved for <m>dy/dx</m> to see the associated direction field.</li>
				 <li>Then enter the general solution to this differential equation (including the integration parameter <m>C</m>).</li>
				 <li>Next we can verify that the solution curves generated for various values of the parameter <m>C</m> all fit nicely through the field
				  no matter what value of <m>C</m> is used.  A slider is provided to allow this parameter to be quickly and smoothly varied through a broad range of values.</li>
				  </ol>
                  </p>
                  <p>The variables of the problem can be changed, and the range of values for each variable can be set to whatever
                is most appropriate for the problem being explored. If the range of values for one variable is much larger than for another,
                a non-uniform grid can be used to more easily view these situations.</p>
                <p>Clicking at a point on the direction field causes a solution curve to be drawn in that passes through the indicated point.</p>
			 </subsection>
	    </section>
        <section>
        	<title>Using CalcPlot3D</title>
			 <subsection xml:id="subsection-desystems">
				 <title>Visualizing Systems of Differential Equations</title>
				 <idx><h>parameters</h><h>in phase plots</h></idx>
				 <idx><h>differential equations</h><h>visualizing systems</h></idx><idx><h>phase portrait</h></idx><idx><h>phase plane</h></idx>
				 <p>When we study systems of 1st-order differential equations, it is helpful to be able to visualize the phase plots associated with these systems,
				 and to see that no matter what values we use for the two (or three) parameters we obtain in the solution, 
				 the general solution (expressed parametrically) will always pass through the vectors in the (two or three dimensional)
				 phase plot just as the solution curves to 1st-order differential equations pass nicely through the corresponding direction fields
				 for any given value of the single parameter <m>C</m>.</p>
				 <p>Let's do a 2 x 2 system of differential equations example!</p>
				 <exploration xml:id="exploration-phaseplots">
				     <statement>
				        <p>a. First, clear the view by clicking on the clear plot button or by deleting the function object by clicking the small x in the upper-right corner of the object.</p>
				        <p>b. Then select <alert>Vector Field</alert> on the <alert>Add to graph</alert> menu.  Note that a parameter slider for the parameter <m>t</m> is also automatically added to the plot.
				        This can be used for animating motion along a solution curve (or flowline) as described below in step g.</p>
				        <p>c. Click the checkbox labeled, <q>Show system of DEs notation</q>, so that it looks like the system we are entering.</p>
				        <p>d. Now enter the equations of the following system of 1st-order differential equations to see its phase plot.</p>
				        <p><md>
							<mrow>\frac{dx}{dt} &amp;= -2x + y</mrow>
							<mrow>\frac{dy}{dt} &amp;= -0.5x - y</mrow>
							<mrow>\frac{dz}{dt} &amp;= 0</mrow>
                        </md></p>
                        <p>e. Since this is a 2 x 2 system, let's <alert>Restrict the view to 2D</alert> by checking this checkbox.</p>
                        <p>f. Clicking on a point on the phase plot generates a solution curve. As you drag this point around the plot, the curve dynamically adjusts to fit the field.</p>
                        <p>The CalcPlot3D app should look something like this:</p>
                        <figure xml:id="figure-2x2system1a">
                            <caption>Phase plot for this 2 x 2 system</caption>
                            <image width="100%" source="images/2x2system1a.png"><description>Phase Plot for a 2 x 2 System</description></image>
                        </figure>
                        
                        <p>g. Clicking on the <alert>Animate</alert> button by the <m>t</m>- parameter animates a point along this path.  
                        This shows not only the direction of travel of an object traveling through this phase portrait from the chosen starting point, 
                        but also the speeds at which it travels as time passes.</p>
                        <p>h. Now add a <alert>Space Curve</alert> representing the general solution of this system (in parametric form) to the plot, using parameters <c>a</c> and <c>b</c>. We can use it to visually verify this general solution.</p>
                    </statement>
                    <answer>
                        <p>The general solution for this system is: <me>\vec{X} = c_1 e^{-3t/2}\left[\begin{pmatrix}1\\1\end{pmatrix}\cos{\scriptsize\frac{t}{2}}-\begin{pmatrix}-1\\0\end{pmatrix}\sin{\scriptsize\frac{t}{2}}\right]</me>
                        <me>+ \quad c_2 e^{-3t/2}\left[\begin{pmatrix}-1\\0\end{pmatrix}\cos{\scriptsize\frac{t}{2}}+\begin{pmatrix}1\\1\end{pmatrix}\sin{\scriptsize\frac{t}{2}}\right]</me>
                        </p>
                        <p>This can then be written in parametric form as:</p>
                        <p><md>
							<mrow>x(t) &amp;= e^{-3t/2}\left[ c_1\left(\cos{\scriptsize{\frac{t}{2}}} + \sin{\scriptsize{\frac{t}{2}}} \right) + c_2\left(\sin{\scriptsize{\frac{t}{2}}} - \cos{\scriptsize\frac{t}{2}}\right)\right]</mrow>
							<mrow>y(t) &amp;= e^{-3t/2}\left(c_1\cos{\scriptsize\frac{t}{2}} + c_2 \sin{\scriptsize\frac{t}{2}} \right)</mrow>
							<mrow>z(t) &amp;= 0</mrow>
                        </md></p>
                        <p>Now replacing <m>c_1</m> with <c>a</c> and <m>c_2</m> with <c>b</c>, we can enter the following equations in the Space Curve object and graph it.</p>
                        <p><md>
							<mrow>x(t) &amp;= e^{-3t/2}\left[\textbf{a}\left(\cos{\scriptsize{\frac{t}{2}}} + \sin{\scriptsize{\frac{t}{2}}} \right) + \textbf{b}\left(\sin{\scriptsize{\frac{t}{2}}} - \cos{\scriptsize\frac{t}{2}}\right)\right]</mrow>
							<mrow>y(t) &amp;= e^{-3t/2}\left(\textbf{a}\cos{\scriptsize\frac{t}{2}} + \textbf{b} \sin{\scriptsize\frac{t}{2}} \right)</mrow>
							<mrow>z(t) &amp;= 0</mrow>
                        </md></p>
                        <p>The parameters <c>a</c> and <c>b</c> can then be varied using their respective sliders to see how the solution curves given by this general solution always fit the system's phase plot.</p>
                        <p>Animate the motion along this curve to see that the orientation is also correct.  The motion should go in the direction of the vectors in the plot.</p>
				        <figure xml:id="figure-phaseportrait1a">
                            <caption>Phase portrait for this 2 x 2 system, showing the definition of the space curve object on the left.</caption>
                            <image width="100%" source="images/phaseportrait1.png"><description>Phase Portrait for a 2 x 2 System</description></image>
                        </figure>
				     </answer>
				 </exploration>
			 </subsection>
	    </section>
        
</chapter>

<chapter>
    <title>Creating STL Files for 3D Printing</title>
    <idx><h>3D printing</h></idx>
    <section xml:id="section-stlfile">
        <title>STL file Creation in CalcPlot3D</title>
        <idx><h>STL files</h><h>creation</h></idx>
		<p>One of the CalcPlot3D's newest features is its ability to save a surface to an STL file.
		This STL file can then be used to print a solid 3D surface model using a 3D printer, sometimes called a rapid prototyping machine.
		For example, here are the saddle, <m>z = x^2 â€“ y^2</m>, and the parametric surface I call the Big Knot.</p>
		<sidebyside widths="51% 49%">
		<figure>
			<caption>3D print of saddle surface, <m>z = x^2 â€“ y^2</m></caption>
			<image width="50%" source="images/saddle3Dprint.png"><description>3D printed saddle surface</description></image>
		</figure>
	
		<figure>
			<caption>3D print of Big Knot, a parametric surface</caption>
			<image width="50%" source="images/bigknot3Dprint.png"><description>3D printed big knot</description></image>
		</figure>
		</sidebyside>
	
		<p>In order for the STL file to work well with the 3D printer, the surface must be given sufficient thickness.
		To address this issue, CalcPlot3D will automatically give the thickness you specify to a surface before creating the STL file.
		The app must create a closed solid to represent the surface if you wish it to print on a 3D printer.</p>
		<p>To give this feature a try, first find a surface that you would like to print to a 3D printer and graph it with CalcPlot3D.</p>
		<p><ol><li>Open <url href="https://c3d.libretexts.org/CalcPlot3D/index.html"><alert>CalcPlot3D</alert></url>.</li>
			<li><p>From the File menu select Create an STL file from the plot.  
			A dialog will appear like the one below.</p>
			<figure>
				<caption>STL dialog in CalcPlot3D</caption>
				<image width="50%" source="images/STLfileDialog.png"><description>STL dialog in CalcPlot3D</description></image>
			</figure>
			</li>
			<li>Enter the name you wish to give to the solid, and then enter the approximate size you expect to print it at and the desired thickness.
			These will be used together with the dimensions of the 3D plot window to determine the approximate correct thickness to use with the surface
			to account for the scaling to be done in the printer application.
			You may need to experiment a little with these values and your 3D printer software to get the thickness just right.</li>
			<li>If the surface you wish to print is already a closed 3D surface like a sphere or a torus, you can specify that no thickness be given to
			the surface before printing, or you can still use a thickness, depending on how you desire the printer to fill the void inside the closed surface.
			In this case, if you choose to give the closed surface a thickness, you will need to choose between using the <alert>Opposite Normals</alert> direction
			(generally inside the closed solid), the <alert>Normal Direction</alert> (generally outside the closed surface), or the <alert>Half-and-Half</alert> option, which goes
			both directions half the thickness and creates two new shells with the same basic shape.</li>
			<li>The <alert>Half-and-Half</alert> option is always best for surfaces that flip orientation in the middle of a surface like a MÃ¶bius Strip or a Klein Bottle.</li>
			<li>Use the <alert>View Solid</alert> button to see what the surface/solid will look like before saving the STL file.
			Note that this can take a little while, during which the cursor will remain a hand.
			The more faces you have in the plot (for a more accurate printed solid), the longer this processing will take.</li>
			<li>For regular surfaces given by functions of two variables like the saddle above, I prefer the <alert><m>z</m>-shift down</alert> option since it preserves
			the exact shape of the surface on the bottom as well as the top of the printed surface.
			But you need to compensate for the fact that the thickness will vary over the surface and be least thick where the surface is steepest in the <m>z</m>-direction.</li>
			<li>Once you see the solid in the plot, you can click on the plot and then type the n-key to view the surface normals of every triangular face in the plot.
			This can look a little busy, but can be helpful to check, as it is generally preferred (and possibly required) that the normal vectors
			of all faces point outwards.  Sometimes this may require you to adjust the parameterization of a parameterized surface, for example.</li>
			<li>Before saving the STL file, note that you can select either a <alert>Binary STL file</alert> (the default) or an <alert>ASCII STL file</alert>.
			The benefit of the Binary STL file is that it is much smaller than the ASCII STL file (about 1/5 the size).
			The benefit of the ASCII STL file is that you can actually read it to view the normal and vertices of each face.</li>
			<li>Once you are ready, click on the <alert>Create File</alert> button.  You should see the file downloading to your default download folder (in Chrome)
			or may need to choose to download it in some browsers.</li>
			<li>Once you have created the file, you will need to check it out in the 3D printer software (slicer) you plan to use.
			It may also be helpful to download an STL viewer like <em>MeshLab</em> or <em>Blender</em>.
			These allow you to check the surface for thickness and for other possible problems before you print it.
			They can also usually be used to fix these problems.  See tutorials online.</li>
			<li>Now you should be ready to print to the 3D printer using the 3D printerâ€™s software.
			There is still some room to play with the surface in this software, scaling it appropriately and choosing how you want to fill
			the surface and how much support material to use.  Ask your local expert to help you with this step.  
			By the way, it can take a long time to print one of these surfaces, depending on the solidâ€™s size and the printer and material being used to print it.
			My 6 in. x 6 in. saddle surface above took 13 hours to print and the 4 in. x 4 in. knot took almost 9 hours.
			But 3D printers are getting faster and less expensive all the time.</li>
		</ol></p>
		<p>If youâ€™d like to share your favorite 3D print-tested STL files along with an image of the solid/surface,
		along with any activities you may have developed to accompany them,
		please send them to me at <email>pseeburger@monroecc.edu</email>.</p>
	</section>
</chapter>
<chapter xml:id="chapter-creatingscripts">
	 <title>*Creating &amp; Using Scripts</title>
	 <idx><h>Scripts</h></idx>
	 <introduction>
	 	<p>As you learned in <xref ref="subsection-savetourl" />, you can save a single view to the URL and share this URL to allow the view to be recreated when it is opened.</p>
	 	<p>Scripts allow you to save a series of views from CalcPlot3D to create a dynamic slide show or exploration.</p>
	    <p>You can use scripts to create:
	    	<ul>
	    		<li><alert>Classroom Demonstrations:</alert> It is often useful to demonstrate how to enter functions, space curves, etc. in CalcPlot3D during class, but sometimes it would be nice to quickly step through a series of visual examples, each of which can be manipulated and explored as much or as little as time allows and you desire.</li>
				<li><alert>Guided Student Exploration Activities:</alert> Students gain the most understanding from playing with and exploring the concepts visually themselves. The more directly students are engaged in the visualization and exploration of calculus concepts the more they will internalize and the clearer their geometric intuition will become.</li>
			</ul>
		</p>
		<p>To access the script commands, we'll use the <alert>Scripts</alert> submenu on the CalcPlot3D main menu.</p>
	 </introduction>
	 <section xml:id="section-scriptload">
        <title>Loading a Script</title>
        <idx><h>Scripts</h><h>loading</h></idx>
        <p></p>
     </section>
	 <section xml:id="section-scriptcreate">
        <title>Creating a New Script</title>
        <idx><h>Scripts</h><h>creating</h></idx>
        <p>When you decide that you'd like to create a script, first be sure you have a step you want to include created and then go to the main menu, select <alert>Scripts</alert>, and then select the option, <alert>Create new script with current plot as 1st step</alert>.</p>
        <p>You will be asked to enter a title for your new script.  See the figure below.  This title will display at the top of an exploration control dialog and will also be the name of the file that will be created when you choose to save it later.</p>
        <figure xml:id="figure-newscript">
            <caption></caption>
            <image width="60%" source="images/newscript.png"><description>New script dialog</description></image>
        </figure>
        <p>Once you've selected a name for the script, CalcPlot3D will recreate the view using the generated script and the exploration control dialog will be displayed on the screen.  This control dialog will allow you to control which step to display in the script and will also allow you to refresh the current step.  Initially it will indicate that you are viewing <alert>Step 1 of 1</alert>.</p>
        <figure xml:id="figure-explorationdialog1">
            <caption></caption>
            <image width="60%" source="images/explorationdialog.png"><description>New script dialog</description></image>
        </figure>
        <p>You are now ready to change the plot to create a second step for the script.  Once it is ready, you'll need to use the <alert>Add current view to active script</alert>.  See the next section for more details.</p>
        <p>Just remember that creating the script does not automatically save it.  You must eventually choose the <alert>Save script</alert> option to do that.</p>
     </section>
     <section xml:id="section-scriptaddstep">
        <title>Adding a Step to the Current Script</title>
        <idx><h>Scripts</h><h>adding a step</h></idx>
        <p>Once you have created a script and populated it with its first step, you can add additional steps, slides, or examples.  To do this, simply modify the plot to show whatever it is that you wish to have in your next step and select the option to <alert>Add current view to active script</alert> from the <alert>Scripts</alert> menu.</p>
        <p>Note that you will be asked the step number after which you wish to add the new step.  By default CalcPlot3D will assume you may want to add it after the last step, but you can place it earlier in the script, as you wish.  If you want your new step to become the first step, just enter 0.</p>
        <figure xml:id="figure-addstep">
            <caption></caption>
            <image width="60%" source="images/addstepnumber2.png"><description>Add a step dialog</description></image>
        </figure>
        <p>This option allows you to adjust the order of your steps as you go to some degree.  But if you wish to make further adjustments to the order of the steps, we can easily do this in the script file itself once we have saved it.</p>
     </section>
     <section xml:id="section-scriptdeletestep">
        <title>Deleting a Step from the Current Script</title>
        <idx><h>Scripts</h><h>deleting a step</h></idx>
        <p>If you decide to modify a step using CalcPlot3D, you can do this by adjusting the view to your liking, adding it at the appropriate step, and then deleting the old version of the step.</p>
        <p>You may also decide to eliminate a step from your script as you rethink your demonstration or exploration.</p>
        <p>In either case, to delete a step, you will select the <alert>Delete a step in the active script</alert> option from the <alert>Scripts</alert> menu.  You will be asked which step you wish to delete and then the step will be deleted from the script.</p>
     </section>
     <section xml:id="section-scriptsave">
        <title>Saving the Current Script</title>
        <idx><h>Scripts</h><h>saving</h></idx>
        <p></p>
     </section>
</chapter>
<backmatter xml:id="backmatter">
    <title>Appendices &amp; Index</title>
	<appendix xml:id="appendix-availablefunctions">
	    <title>List of Available Functions</title>
	    <idx><h>functions</h><h>available</h></idx>
	    <sidebyside>
	        <tabular halign="center" top="major">
				<col width="20%"/>
				<col width="20%" />
				<col width="20%" />	
				<row valign="top" bottom="none">
					<cell><p>ln()</p></cell>
					<cell><p>log()</p></cell>
					<cell><p>e^()</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>cos()</p></cell>
					<cell><p>arccos()</p></cell>
					<cell><p>cosh()</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>sin()</p></cell>
					<cell><p>arcsin()</p></cell>
					<cell><p>sinh()</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>tan()</p></cell>
					<cell><p>arctan()</p></cell>
					<cell><p>tanh()</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>cot()</p></cell>
					<cell><p>arccot()</p></cell>
					<cell><p>coth()</p></cell>
				</row>
                <row valign="top" bottom="none">
					<cell><p>sec()</p></cell>
					<cell><p>arcsec()</p></cell>
					<cell><p>sech()</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>csc()</p></cell>
					<cell><p>arccsc()</p></cell>
					<cell><p>csch()</p></cell>
				</row>
				<row valign="top" bottom="none">
					<cell><p>floor()</p></cell>
					<cell><p>int()</p></cell>
					<cell><p>ceil()</p></cell>
				</row>
				<row valign="top" bottom="major">
					<cell><p>abs()</p></cell>
					<cell><p>sign()</p></cell>
					<cell><p>sqrt()</p></cell>
				</row>
			</tabular>
		</sidebyside>

		<p><ol>
			<li>For absolute value, you can use |x| instead of abs(x).</li>
			<li>Factorial can be entered using !, e.g. 5! which is 5(4)(3)(2)(1).</li>
			<li>The exponential function <c>e^(x)</c> can also be entered exp(x).</li>
			<li>The sign function can also be entered as sgn().  It returns 1, if the input is positive, 0 if the input is 0, and -1, if the input is negative.</li>
			<li>For Spanish speakers, sin(x) can also be entered sen(x).  
			Similarly, arcsin(x) = arcsen(x) and sinh(x) = senh(x).</li>
			</ol>
		</p>
	</appendix>
	<appendix xml:id="appendix-dynamicfigures">
		 <title>Creating Dynamic Figures</title>
		 <introduction><p>Dynamic figures can be created using CalcPlot3D and placed in online OER textbooks or webpages.
		 These figures can be rotatable 3D plots or 2D plots with or without slider controls.  
		 Typically only the plot window is displayed, while the menus and controls from the CalcPlot3D app are hidden.</p>
		 <p>Depending on the context, the exact HTML code used to embed them will vary.</p>
		 <p>These dynamic figures are already being used in OER textbooks in the LibreTexts platform,
		 in PreTeXt OER textbooks and articles (like this one), in Geogebra books, and more.</p>
		 <p>For a video introduction to creating these figures for LibreTexts click the link below.</p>
		 <p><url href="https://www.youtube.com/watch?v=sP9TESllJfw">Creating Dynamic Figures in LibreTexts using CalcPlot3D</url></p></introduction>
		 <section>
		     <title>Dynamic Figures with No Controls</title>
			 <p>These figures can be rotated if they are 3D, and can be manipulated in other ways with the mouse and keystrokes, just as if they were in the full CalcPlot3D app.</p>
			 <p>But in this type of dynamic figure only the 3D plot window is displayed, while all the menus and controls of the CalcPlot3D app are hidden.  See <xref ref="figure-dynamicfigure1" /> below.</p>
			 <figure xml:id="figure-dynamicfigure1">
				<caption>A dynamic figure</caption>
				<interactive calcplot3d="type=z;z=7xy/e^(x^2+y^2);visible=false;umin=0;umax=10;usteps=100;vmin=0;vmax=10;grid=30;format=normal;alpha=-1;constcol=rgb(255,0,0);contourcolor=red&amp;type=spacecurve;spacecurve=curve;x=t+7;y=2t+5;z=1.5t+1;visible=true;tmin=-10;tmax=10;tsteps=100;color=rgb(17,109,192);showtrace=false;tval=2.4000000000000004;constcol=true;twod=false;showpt=true;trace=true;vel=true;acc=true;osc=false;k=false;repeat=false;bounce=false;showtvector=false;shownvector=false;showbvector=false;showtnbeqs=false;showtnblabels=false;showoscplane=false;showrectplane=false;shownormplane=false&amp;type=vector;vector=%3C1,2,1.5%3E;visible=true;color=rgb(255,0,0);size=2;initialpt=(0,0,0)&amp;type=point;point=(7.4,5.8,1.6);visible=true;color=rgb(0,0,0);size=4&amp;type=point;point=(9.4,9.8,4.6);visible=true;color=rgb(0,0,0);size=4&amp;type=text;text=%20%20%20%20%20P%20~%20(x%3Csub%3E0%3C%2Fsub%3E%2C%20y%3Csub%3E0%3C%2Fsub%3E%2C%20z%3Csub%3E0%3C%2Fsub%3E);visible=true;point=(7.4,5.8,1.6);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=12pt;bold=false;italic=false;fontmath=true;align=Center-right&amp;type=text;text=%20%20%20%20Q%20~%20(x%2C%20y%2C%20z);visible=true;point=(9.4,9.8,4.6);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=12pt;bold=false;italic=false;fontmath=true;align=Center-right&amp;type=text;text=v%3Charpoon%3E%20~%20%3Ca%2C%20b%2C%20c%3E;visible=true;point=(1,2,2.25);color=rgb(255,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=false;italic=true;fontmath=true;align=Center&amp;type=window;hsrmode=1;anaglyph=-1;center=17.139439715453594,10.377939594400079,5.155621864146323,1;focus=5,5,5,1;up=-0.2866219643580234,-0.12700640150211873,0.9495879230092552,1;transparent=false;alpha=140;edgeson=true;faceson=true;showbox=false;showaxes=true;showticks=false;perspective=true;centerxpercent=0.4;centerypercent=0.5;rotationsteps=30;autospin=true;xygrid=true;yzgrid=true;xzgrid=true;gridsonbox=true;gridplanes=false;gridcolor=rgb(128,128,128);xmin=0;xmax=10;ymin=0;ymax=10;zmin=0;zmax=10;xscale=1;yscale=1;zscale=1;zcmin=-4;zcmax=4;zoom=0.15;xscalefactor=1;yscalefactor=1;zscalefactor=1" variant="minimal" width="60%">
					<static>
						<image source="images/staticline3d.png" width="50%"/>
					</static>
				</interactive>
			</figure>
		
			<p>To create this type of dynamic figure:
			<ol><li>Create the plot you desire to display in the dynamic figure using CalcPlot3D.</li>
			<li><p>Then save the view to the URL using the option on the File menu.  (See <xref ref="subsection-savetourl"/>.)
			You'll get a URL something like this:</p>
			<sidebyside><program><input>https://c3d.libretexts.org/CalcPlot3D/index.html?type=z;z=7xy/e^(x^2+y^2);visible=false;umin=0;umax=10;usteps=100;vmin=0;vmax=10;grid=30;format=normal;alpha=-1;constcol=rgb(255,0,0);contourcolor=red&amp;type=spacecurve;spacecurve=curve;x=t+7;y=2t+5;z=1.5t+1;visible=true;tmin=-10;tmax=10;tsteps=100;color=rgb(17,109,192);showtrace=false;tval=2.4000000000000004;constcol=true;twod=false;showpt=true;trace=true;vel=true;acc=true;osc=false;k=false;repeat=false;bounce=false;showtvector=false;shownvector=false;showbvector=false;showtnbeqs=false;showtnblabels=false;showoscplane=false;showrectplane=false;shownormplane=false&amp;type=vector;vector=%3C1,2,1.5%3E;visible=true;color=rgb(255,0,0);size=2;initialpt=(0,0,0)&amp;type=point;point=(7.4,5.8,1.6);visible=true;color=rgb(0,0,0);size=4&amp;type=point;point=(9.4,9.8,4.6);visible=true;color=rgb(0,0,0);size=4&amp;type=text;text=%20%20%20%20%20P%20~%20(x%3Csub%3E0%3C%2Fsub%3E%2C%20y%3Csub%3E0%3C%2Fsub%3E%2C%20z%3Csub%3E0%3C%2Fsub%3E);visible=true;point=(7.4,5.8,1.6);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=12pt;bold=false;italic=false;fontmath=true;align=Center-right&amp;type=text;text=%20%20%20%20Q%20~%20(x%2C%20y%2C%20z);visible=true;point=(9.4,9.8,4.6);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=12pt;bold=false;italic=false;fontmath=true;align=Center-right&amp;type=text;text=v%3Charpoon%3E%20~%20%3Ca%2C%20b%2C%20c%3E;visible=true;point=(1,2,1.5);color=rgb(255,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=false;italic=true;fontmath=true;align=Center-left&amp;type=window;hsrmode=1;anaglyph=-1;center=17.139439715453594,10.377939594400079,5.155621864146323,1;focus=5,5,5,1;up=-0.2866219643580234,-0.12700640150211873,0.9495879230092552,1;transparent=false;alpha=140;edgeson=true;faceson=true;showbox=false;showaxes=true;showticks=false;perspective=true;centerxpercent=0.5;centerypercent=0.5;rotationsteps=30;autospin=true;xygrid=true;yzgrid=true;xzgrid=true;gridsonbox=true;gridplanes=false;gridcolor=rgb(128,128,128);xmin=0;xmax=10;ymin=0;ymax=10;zmin=0;zmax=10;xscale=1;yscale=1;zscale=1;zcmin=-4;zcmax=4;zoom=0.305882;xscalefactor=1;yscalefactor=1;zscalefactor=1
			
			</input></program></sidebyside>
			</li>
			
			<li>Copy the part of the URL after the question mark to paste into the appropriate HTML code shown below.</li>
			<li>Now typically we need to place the dynamic figure in an <c>iframe</c>, although this is hidden from the user in PreTeXt.
			Copy and paste the code below, depending on your situation.</li>
			</ol></p>
			<paragraphs>
			   <title>LibreTexts and many other HTML web pages</title>
			   <p>In order to get a dynamic figure that hides all the menus and controls of the CalcPlot3D app, we need to use a slightly different URL.</p>
			   <p>The URL for a dynamic figure with <alert>no controls</alert> is:</p> 
			   <sidebyside><program><input>https://c3d.libretexts.org/CalcPlot3D/dynamicFigure/index.html</input></program></sidebyside>
			   <p>Note that the data for the figure is encoded in a query string by CalcPlot3D.  This means that we will need a question mark (?) just after the URL above
			   and then we'll paste the data copied from the CalcPlot3D-generated URL.  If we were to enter this new URL and query string in the browser directly,
			   we would get the dynamic figure by itself on the page.</p>
			   <p>To get the figure(s) on a page, especially if you might wish to place more than one of these dynamic figures on the same page,
			   it is useful to embed each dynamic figure in an <c>iframe</c> (so they won't interfere with each other).
			   I choose to make the width of this <c>iframe</c> 90% or less so there is still space on each side to scroll up and down past the figure.</p>
			   <p>Below you can see a listing of the code for <xref ref="figure-dynamicfigure1" /> when it is displayed in LibreTexts or a generic webpage.</p>
			   <sidebyside>
			      <program language="html">
			          <input>
			               <![CDATA[<p style="text-align:center">
			               <iframe frameborder="0" height="480px" 
			                       src="https://c3d.libretexts.org/CalcPlot3D/dynamicFigure/index.html?type=
			                       z;z=7xy/e^(x^2+y^2);visible=false;umin=0;umax=10;usteps=100;vmin=0;vmax=10;grid=30;
			                       format=normal;alpha=-1;constcol=rgb(255,0,0);contourcolor=red&amp;
			                       type=spacecurve;spacecurve=curve;x=t+7;y=2t+5;z=1.5t+1;visible=true;tmin=-10;tmax=10;
			                       tsteps=100;color=rgb(17,109,192);showtrace=false;tval=2.4000000000000004;constcol=true;
			                       twod=false;showpt=true;trace=true;vel=true;acc=true;osc=false;k=false;repeat=false;
			                       bounce=false;showtvector=false;shownvector=false;showbvector=false;showtnbeqs=false;
			                       showtnblabels=false;showoscplane=false;showrectplane=false;shownormplane=false&amp;
			                       type=vector;vector=%3C1,2,1.5%3E;visible=true;color=rgb(255,0,0);size=2;initialpt=(0,0,0)&amp;
			                       type=point;point=(7.4,5.8,1.6);visible=true;color=rgb(0,0,0);size=4&amp;
			                       type=point;point=(9.4,9.8,4.6);visible=true;color=rgb(0,0,0);size=4&amp;
			                       type=text;text=%20%20%20%20%20P%20~%20(x%3Csub%3E0%3C%2Fsub%3E%2C%20y%3Csub%3E0%3C%2Fsub%3E%2C%20z%3Csub%3E0%3C%2Fsub%3E);
			                       visible=true;point=(7.4,5.8,1.6);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=12pt;
			                       bold=false;italic=false;fontmath=true;align=Center-right&amp;
			                       type=text;text=%20%20%20%20Q%20~%20(x%2C%20y%2C%20z);visible=true;point=(9.4,9.8,4.6);
			                       color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=12pt;bold=false;italic=false;
			                       fontmath=true;align=Center-right&amp;
			                       type=text;text=v%3Charpoon%3E%20~%20%3Ca%2C%20b%2C%20c%3E;
			                       visible=true;point=(1,2,1.5);color=rgb(255,0,0);font=Times%20New%20Roman;fontsize=14pt;
			                       bold=false;italic=true;fontmath=true;align=Center-left&amp;
			                       type=window;hsrmode=1;anaglyph=-1;center=17.139439715453594,10.377939594400079,5.155621864146323,1;
			                       focus=5,5,5,1;up=-0.2866219643580234,-0.12700640150211873,0.9495879230092552,1;
			                       transparent=false;alpha=140;edgeson=true;faceson=true;showbox=false;showaxes=true;
			                       showticks=false;perspective=true;centerxpercent=0.5;centerypercent=0.5;rotationsteps=30;
			                       autospin=true;xygrid=true;yzgrid=true;xzgrid=true;gridsonbox=true;gridplanes=false;
			                       gridcolor=rgb(128,128,128);xmin=0;xmax=10;ymin=0;ymax=10;zmin=0;zmax=10;xscale=1;
			                       yscale=1;zscale=1;zcmin=-4;zcmax=4;zoom=0.305882;xscalefactor=1;yscalefactor=1;zscalefactor=1"
			                       width="90%">
			               </iframe>
			               </p>]]>
					  </input>
				  </program>
			   </sidebyside>

		    </paragraphs>
			<paragraphs>
			   <title>PreTeXt</title>
			   <p>When inserting a dynamic figure created with CalcPlot3D into a PreTeXt document, we need to use the following PreTeXt construction.</p>
			   <sidebyside><program><input>
			       <![CDATA[<figure>
			          <caption>dynamic figure</caption>
			          <interactive calcplot3d="Querystring from CalcPlot3D" 
			                       variant="minimal" 
			                       width="90%">
			             <static>
			                <image source="location of a static image of the dynamic figure for PDF output" width="50%" />
			             </static>
			          </interactive>
			       </figure>
			       ]]>
			   </input></program></sidebyside>
			   
			   <p>For the example shown in <xref ref="figure-dynamicfigure1" /> above, this construction looks like:</p>
			   <sidebyside><program><input>
			       <![CDATA[<figure>
			          <caption>dynamic figure</caption>
			          <interactive calcplot3d="type=z;z=7xy/e^(x^2+y^2);visible=false;umin=0;umax=10;usteps=100;vmin=0;vmax=10;grid=30;format=normal;alpha=-1;constcol=rgb(255,0,0);contourcolor=red&amp;type=spacecurve;spacecurve=curve;x=t+7;y=2t+5;z=1.5t+1;visible=true;tmin=-10;tmax=10;tsteps=100;color=rgb(17,109,192);showtrace=false;tval=2.4000000000000004;constcol=true;twod=false;showpt=true;trace=true;vel=true;acc=true;osc=false;k=false;repeat=false;bounce=false;showtvector=false;shownvector=false;showbvector=false;showtnbeqs=false;showtnblabels=false;showoscplane=false;showrectplane=false;shownormplane=false&amp;type=vector;vector=%3C1,2,1.5%3E;visible=true;color=rgb(255,0,0);size=2;initialpt=(0,0,0)&amp;type=point;point=(7.4,5.8,1.6);visible=true;color=rgb(0,0,0);size=4&amp;type=point;point=(9.4,9.8,4.6);visible=true;color=rgb(0,0,0);size=4&amp;type=text;text=%20%20%20%20%20P%20~%20(x%3Csub%3E0%3C%2Fsub%3E%2C%20y%3Csub%3E0%3C%2Fsub%3E%2C%20z%3Csub%3E0%3C%2Fsub%3E);visible=true;point=(7.4,5.8,1.6);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=12pt;bold=false;italic=false;fontmath=true;align=Center-right&amp;type=text;text=%20%20%20%20Q%20~%20(x%2C%20y%2C%20z);visible=true;point=(9.4,9.8,4.6);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=12pt;bold=false;italic=false;fontmath=true;align=Center-right&amp;type=text;text=v%3Charpoon%3E%20~%20%3Ca%2C%20b%2C%20c%3E;visible=true;point=(1,2,2.25);color=rgb(255,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=false;italic=true;fontmath=true;align=Center&amp;type=window;hsrmode=1;anaglyph=-1;center=17.139439715453594,10.377939594400079,5.155621864146323,1;focus=5,5,5,1;up=-0.2866219643580234,-0.12700640150211873,0.9495879230092552,1;transparent=false;alpha=140;edgeson=true;faceson=true;showbox=false;showaxes=true;showticks=false;perspective=true;centerxpercent=0.4;centerypercent=0.5;rotationsteps=30;autospin=true;xygrid=true;yzgrid=true;xzgrid=true;gridsonbox=true;gridplanes=false;gridcolor=rgb(128,128,128);xmin=0;xmax=10;ymin=0;ymax=10;zmin=0;zmax=10;xscale=1;yscale=1;zscale=1;zcmin=-4;zcmax=4;zoom=0.15;xscalefactor=1;yscalefactor=1;zscalefactor=1"
			                       variant="minimal"
			                       width="60%">
					      <static>
						     <image source="images/staticline3d.png" width="50%"/>
					      </static>
			          </interactive>
			       </figure>
			       ]]>
			   </input></program></sidebyside>		   
		    </paragraphs>

        </section>

        <section>
             <title>Dynamic Figures with Controls</title>
			 <p>It is possible to create dynamic figures that do show some parameter sliders and sometimes also the 2D trace plot.  These dynamic figures use a different base URL:</p>
			 <sidebyside><program><input>https://c3d.libretexts.org/CalcPlot3D/dynamicFigureWCP/index.html</input></program></sidebyside>
			 <p>If there are sliders in these dynamic figures with controls, they can be given new labels and used to vary the associated parameters in the plot.
			 See an example in <xref ref="figure-dynamicfigure2"/> below. Note that you can click on the 2D trace plane and see a corresponding trace point on the 3D surface.
			 You can also move the sliders or enter values from 1 to 3 in each textbox to see the number of peaks/valleys change.</p>
			 <figure xml:id="figure-dynamicfigure2">
				<caption>A dynamic figure with controls</caption>
				<interactive calcplot3d="type=jaxlabel;position=middle;math=%255Cpsi_%257Bn_x%252Cn_y%257D(x%252Cy);textonly=false&amp;type=z;z=sin(api*x)sin(bpi*y);visible=true;umin=0;umax=1;vmin=0;vmax=1;grid=50;format=normal;alpha=200;constcol=rgb(255,0,0);view=0;contourcolor=rgb(255,0,0);contourplot=true;showcontourplot=true;firstvalue=-1;stepsize=0.2;numlevels=11;xnum=75;ynum=75;show2d=false;hidesurface=false;hidelabels=false;showprojections=false;surfacecontours=true;projectioncolor=rgba(51,153,0,1);showxygrid=false;showxygridonbox=false&amp;type=slider;slider=a;value=1;steps=2;pmin=1;pmax=3;repeat=true;bounce=true;waittime=40;careful=true;noanimate=true;name=n_x&amp;type=slider;slider=b;value=1;steps=2;pmin=1;pmax=3;repeat=true;bounce=true;waittime=40;careful=true;noanimate=true;name=n_y&amp;type=text;text=0;visible=true;point=(0,0,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=15pt;bold=true;italic=false;fontmath=true;align=Center-left&amp;type=text;text=L;visible=true;point=(1,-0.025,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=text;text=L;visible=true;point=(-0.05,1,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=text;text=x;visible=true;point=(0.5,-0.07,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=text;text=y;visible=true;point=(-0.08,0.5,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=window;hsrmode=3;anaglyph=-1;center=-7.447051206708178,-2.790794355991455,3.71998429905919,1;focus=0.5,0.5,0.5,1;up=0.39804763218685024,0.14521777837291014,0.9057979241281567,1;transparent=true;alpha=140;twoviews=false;unlinkviews=false;axisextension=0;xaxislabel=%20;yaxislabel=%20;zaxislabel=%20;edgeson=false;faceson=true;showbox=false;showaxes=false;showticks=false;perspective=true;centerxpercent=0.5;centerypercent=0.4;rotationsteps=30;autospin=true;xygrid=false;yzgrid=false;xzgrid=false;gridsonbox=false;gridplanes=true;gridcolor=rgb(128,128,128);xmin=0;xmax=1;ymin=0;ymax=1;zmin=0;zmax=1;xscale=1;yscale=1;zscale=1;zcmin=-4;zcmax=4;zoom=3.0;xscalefactor=1;yscalefactor=1;zscalefactor=0.5;hidexysliders=true;hidetracevalue=true;" variant="controls" width="100%" aspect="3:2">
					<static>
						<image source="images/staticprobabilitydensity.png" width="100%"/>
					</static>
				</interactive>
			</figure>

            <p>To create a dynamic figure with controls there are a few more steps to take:
			<ol><li>Create the plot you desire to display in the dynamic figure using CalcPlot3D.  In order to have controls, it will need to make use of parameter sliders or include a contour plot.
			As time goes on, more options may become available.  (Let me know what you'd like to use, and I'll try to implement it.)</li>
			<li><p>Then save the view to the URL using the option on the File menu.  (See <xref ref="subsection-savetourl"/>.)
			You'll get a URL something like this:</p>
			<sidebyside><program><input>https://c3d.libretexts.org/CalcPlot3D/index.html?type=jaxlabel;position=middle;math=%255Cpsi_%257Bn_x%252Cn_y%257D(x%252Cy);textonly=false&amp;type=z;z=sin(api*x)sin(bpi*y);visible=true;umin=0;umax=1;vmin=0;vmax=1;grid=50;format=normal;alpha=200;constcol=rgb(255,0,0);view=0;contourcolor=rgb(255,0,0);contourplot=true;showcontourplot=true;firstvalue=-1;stepsize=0.2;numlevels=11;xnum=75;ynum=75;show2d=false;hidesurface=false;hidelabels=false;showprojections=false;surfacecontours=true;projectioncolor=rgba(51,153,0,1);showxygrid=false;showxygridonbox=false&amp;type=slider;slider=a;value=1;steps=2;pmin=1;pmax=3;repeat=true;bounce=true;waittime=40;careful=true;noanimate=true;name=n_x&amp;type=slider;slider=b;value=1;steps=2;pmin=1;pmax=3;repeat=true;bounce=true;waittime=40;careful=true;noanimate=true;name=n_y&amp;type=text;text=0;visible=true;point=(0,0,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=15pt;bold=true;italic=false;fontmath=true;align=Center-left&amp;type=text;text=L;visible=true;point=(1,-0.025,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=text;text=L;visible=true;point=(-0.05,1,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=text;text=x;visible=true;point=(0.5,-0.07,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=text;text=y;visible=true;point=(-0.08,0.5,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=window;hsrmode=3;anaglyph=-1;center=-7.447051206708178,-2.790794355991455,3.71998429905919,1;focus=0.5,0.5,0.5,1;up=0.39804763218685024,0.14521777837291014,0.9057979241281567,1;transparent=true;alpha=140;twoviews=false;unlinkviews=false;axisextension=0;xaxislabel=%20;yaxislabel=%20;zaxislabel=%20;edgeson=false;faceson=true;showbox=false;showaxes=false;showticks=false;perspective=true;centerxpercent=0.5;centerypercent=0.4;rotationsteps=30;autospin=true;xygrid=false;yzgrid=false;xzgrid=false;gridsonbox=false;gridplanes=true;gridcolor=rgb(128,128,128);xmin=0;xmax=1;ymin=0;ymax=1;zmin=0;zmax=1;xscale=1;yscale=1;zscale=1;zcmin=-4;zcmax=4;zoom=3.543529;xscalefactor=1;yscalefactor=1;zscalefactor=0.5;hidexysliders=true;hidetracevalue=true;
			
			</input></program></sidebyside>
			</li>
			<li><p>Now you have a few options that you may wish to alter in the query string by hand.
			    <ul>
			        <li><p>You can add a <c>name</c> attribute and/or a <c>noanimate</c> attribute to any sliders.  For example, <q>noanimate=true;name=n_x</q>.  Note that each object, including the sliders, starts with <q>type=</q> in the query string.</p>
			            <p>The <c>name</c> attribute changes the label of the slider to the supplied name, using MathJAX to format the supplied name.  This means you can use LaTeX in the name.</p>
			            <p>The <c>noanimate</c> attribute allows you to hide the Animate button on the slider control, if you wish.</p></li>
			        <li><p>You can add one or more of the following attributes to the window element at the very end of the query string: 
			        <q>hidexysliders=true; hidetracevalue=true;</q></p>
			            <p>Here the <c>hidexysliders</c> tag allows you to hide the <m>x</m>- and <m>y</m>-sliders that appear below the 2D trace plane by default.</p>
			            <p>The <c>hidetracevalue</c> tag allows you to hide the trace value normally displayed on the 3D plot when moving a trace point around on the
			            2D trace plane (and 3D surface).</p></li>
			    </ul></p>
			</li>
			<li>Copy the part of the URL after the question mark to paste into the appropriate HTML code shown below.</li>
			<li>Now typically we need to place the dynamic figure in an <c>iframe</c>, although this is hidden from the user in PreTeXt.
			Copy and paste the code below, depending on your situation.</li>
			</ol></p>
			<paragraphs>
			   <title>LibreTexts and many other HTML web pages</title>
			   <p>In order to get a dynamic figure that hides all the menus and controls of the CalcPlot3D app, we need to use a slightly different URL.</p>
			   <p>The URL for a dynamic figure with <alert>no controls</alert> is:</p> 
			   <sidebyside><program><input>https://c3d.libretexts.org/CalcPlot3D/dynamicFigure/index.html?</input></program></sidebyside>
			   <p>Note that the data for the figure is encoded in a query string by CalcPlot3D.  This means that we will need a question mark (?) just after the URL above
			   and then we'll paste the data copied from the CalcPlot3D-generated URL.  If we were to enter this new URL and query string in the browser directly,
			   we would get the dynamic figure by itself on the page.</p>
			   <p>To get the figure(s) on a page, especially if you might wish to place more than one of these dynamic figures on the same page,
			   it is useful to embed each dynamic figure in an <c>iframe</c> (so they won't interfere with each other).
			   I choose to make the width of this <c>iframe</c> 90% or less so there is still space on each side to scroll up and down past the figure.
			   For dynamic figures with controls, you may wish to adjust the height so that the width will always be larger than the height.
			   Some adjustment may be required to accomodate the control sliders and 2D trace plane (when present).</p>
			   <p>Below you can see a listing of the code for <xref ref="figure-dynamicfigure2" /> when it is displayed in LibreTexts or a generic webpage.
			   Note that you can see the modified code elements I mentioned above.  The sliders each have the <c>name</c> and <c>noanimate</c> attributes,
			   and the <c>hidexysliders</c> and <c>hidetracevalue</c> attributes are in the last line of the query string.</p>
			   <sidebyside>
			      <program language="html">
			          <input>
			               <![CDATA[<p style="text-align:center">
			               <iframe frameborder="0" height="480px" src="https://c3d.libretexts.org/CalcPlot3D/dynamicFigureWCP/index.html??
			               type=jaxlabel;position=middle;math=%255Cpsi_%257Bn_x%252Cn_y%257D(x%252Cy);textonly=false&amp;
			               type=z;z=sin(api*x)sin(bpi*y);visible=true;umin=0;umax=1;vmin=0;vmax=1;grid=50;format=normal;alpha=200;
			               constcol=rgb(255,0,0);view=0;contourcolor=rgb(255,0,0);contourplot=true;showcontourplot=true;firstvalue=-1;
			               stepsize=0.2;numlevels=11;xnum=75;ynum=75;show2d=false;hidesurface=false;hidelabels=false;showprojections=false;
			               surfacecontours=true;projectioncolor=rgba(51,153,0,1);showxygrid=false;showxygridonbox=false&amp;
			               type=slider;slider=a;value=1;steps=2;pmin=1;pmax=3;repeat=true;bounce=true;waittime=40;careful=true;noanimate=true;name=n_x&amp;
			               type=slider;slider=b;value=1;steps=2;pmin=1;pmax=3;repeat=true;bounce=true;waittime=40;careful=true;noanimate=true;name=n_y&amp;
			               type=text;text=0;visible=true;point=(0,0,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=15pt;bold=true;italic=false;
			               fontmath=true;align=Center-left&amp;
			               type=text;text=L;visible=true;point=(1,-0.025,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;
			               fontmath=true;align=Center&amp;
			               type=text;text=L;visible=true;point=(-0.05,1,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;
			               fontmath=true;align=Center&amp;
			               type=text;text=x;visible=true;point=(0.5,-0.07,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;
			               fontmath=true;align=Center&amp;
			               type=text;text=y;visible=true;point=(-0.08,0.5,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;
			               fontmath=true;align=Center&amp;
			               type=window;hsrmode=3;anaglyph=-1;center=-7.447051206708178,-2.790794355991455,3.71998429905919,1;
			               focus=0.5,0.5,0.5,1;up=0.39804763218685024,0.14521777837291014,0.9057979241281567,1;transparent=true;alpha=140;twoviews=false;
			               unlinkviews=false;axisextension=0;xaxislabel=%20;yaxislabel=%20;zaxislabel=%20;edgeson=false;faceson=true;showbox=false;
			               showaxes=false;showticks=false;perspective=true;centerxpercent=0.5;centerypercent=0.4;rotationsteps=30;autospin=true;
			               xygrid=false;yzgrid=false;xzgrid=false;gridsonbox=false;gridplanes=true;gridcolor=rgb(128,128,128);
			               xmin=0;xmax=1;ymin=0;ymax=1;zmin=0;zmax=1;xscale=1;yscale=1;zscale=1;zcmin=-4;zcmax=4;zoom=3.543529;
			               xscalefactor=1;yscalefactor=1;zscalefactor=0.5;
			               hidexysliders=true;hidetracevalue=true;" 
			               width="90%"></iframe></p>]]>
					  </input>
				  </program>
			   </sidebyside>

		    </paragraphs>
			<paragraphs>
			   <title>PreTeXt</title>
			   <p>When inserting a dynamic figure created with CalcPlot3D into a PreTeXt document, we need to use the following PreTeXt construction.</p>
			   <sidebyside><program><input>
			       <![CDATA[<figure>
			          <caption>dynamic figure</caption>
			          <interactive calcplot3d="Querystring from CalcPlot3D" 
			                       variant="controls" 
			                       width="90%"
			                       aspect="3:2">
			             <static>
			                <image source="location of a static image of the dynamic figure for PDF output" width="100%" />
			             </static>
			          </interactive>
			       </figure>
			       ]]>
			   </input></program></sidebyside>
			   <p>Note that we changed the <c>variant</c> attribute from <q>minimal</q> to <q>controls</q>.  We also added an <c>aspect</c> attribute.
			   This forces the viewport to the given aspect ratio, making it wider than it is tall and accommodating the control panel on the left.</p>
			   <p>For the example shown in <xref ref="figure-dynamicfigure2" /> above, this construction looks like:</p>
			   <sidebyside><program><input>
			       <![CDATA[
			       <figure xml:id="figure-dynamicfigure2">
						<caption>A dynamic figure with controls</caption>
						<interactive calcplot3d="type=jaxlabel;position=middle;math=%255Cpsi_%257Bn_x%252Cn_y%257D(x%252Cy);textonly=false&amp;type=z;z=sin(api*x)sin(bpi*y);visible=true;umin=0;umax=1;vmin=0;vmax=1;grid=50;format=normal;alpha=200;constcol=rgb(255,0,0);view=0;contourcolor=rgb(255,0,0);contourplot=true;showcontourplot=true;firstvalue=-1;stepsize=0.2;numlevels=11;xnum=75;ynum=75;show2d=false;hidesurface=false;hidelabels=false;showprojections=false;surfacecontours=true;projectioncolor=rgba(51,153,0,1);showxygrid=false;showxygridonbox=false&amp;type=slider;slider=a;value=1;steps=2;pmin=1;pmax=3;repeat=true;bounce=true;waittime=40;careful=true;noanimate=true;name=n_x&amp;type=slider;slider=b;value=1;steps=2;pmin=1;pmax=3;repeat=true;bounce=true;waittime=40;careful=true;noanimate=true;name=n_y&amp;type=text;text=0;visible=true;point=(0,0,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=15pt;bold=true;italic=false;fontmath=true;align=Center-left&amp;type=text;text=L;visible=true;point=(1,-0.025,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=text;text=L;visible=true;point=(-0.05,1,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=text;text=x;visible=true;point=(0.5,-0.07,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=text;text=y;visible=true;point=(-0.08,0.5,0);color=rgb(0,0,0);font=Times%20New%20Roman;fontsize=14pt;bold=true;italic=false;fontmath=true;align=Center&amp;type=window;hsrmode=3;anaglyph=-1;center=-7.447051206708178,-2.790794355991455,3.71998429905919,1;focus=0.5,0.5,0.5,1;up=0.39804763218685024,0.14521777837291014,0.9057979241281567,1;transparent=true;alpha=140;twoviews=false;unlinkviews=false;axisextension=0;xaxislabel=%20;yaxislabel=%20;zaxislabel=%20;edgeson=false;faceson=true;showbox=false;showaxes=false;showticks=false;perspective=true;centerxpercent=0.5;centerypercent=0.4;rotationsteps=30;autospin=true;xygrid=false;yzgrid=false;xzgrid=false;gridsonbox=false;gridplanes=true;gridcolor=rgb(128,128,128);xmin=0;xmax=1;ymin=0;ymax=1;zmin=0;zmax=1;xscale=1;yscale=1;zscale=1;zcmin=-4;zcmax=4;zoom=3.0;xscalefactor=1;yscalefactor=1;zscalefactor=0.5;hidexysliders=true;hidetracevalue=true;"
						             variant="controls" 
						             width="100%" 
						             aspect="3:2">
							<static>
								<image source="images/staticprobabilitydensity.png" width="100%"/>
							</static>
						</interactive>
			       </figure>
			       ]]>
			   </input></program></sidebyside>		   
		    </paragraphs>
            
		</section>

	</appendix>
	<index>
		<title>Index</title>
		<index-list />
	</index>
</backmatter>

</book>
</pretext>